{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "e6926d02-444b-4a3c-9521-219f9ac5f299",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "overview",
            "preText": "",
            "style": "link"
          },
          {
            "id": "d340413d-4cff-42d5-9865-4ac6877e8591",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "User Identity Assessment",
            "subTarget": "IdentAssess",
            "style": "link"
          },
          {
            "id": "f5d2a578-4609-47bd-81c5-1feddfa269ab",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Identity Configuration",
            "subTarget": "IdentConfig",
            "style": "link"
          },
          {
            "id": "f16eb1c5-3cb2-40b0-945c-a861d11a0861",
            "cellValue": "tab",
            "linkTarget": "parameter",
            "linkLabel": "Security Settings & MFA",
            "subTarget": "mfa",
            "style": "link"
          }
        ]
      },
      "name": "tab-menu"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Overview (as at 26-07-22)",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "13f56671-7604-4427-a4d8-663f3da0cbc5",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "type": 4,
                  "isRequired": true,
                  "value": {
                    "durationMs": 604800000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000,
                        "createdTime": "2018-11-13T19:33:10.162Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 900000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 1800000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 3600000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 14400000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 43200000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 86400000,
                        "createdTime": "2018-11-13T19:33:10.165Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 172800000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 259200000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 604800000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 1209600000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 2592000000,
                        "createdTime": "2018-11-13T19:33:10.167Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      }
                    ],
                    "allowCustom": true
                  }
                },
                {
                  "id": "3b5cc420-8ad8-4523-ba28-a54910756794",
                  "version": "KqlParameterItem/1.0",
                  "name": "Apps",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n| summarize Count = count() by AppDisplayName\r\n| order by Count desc, AppDisplayName asc\r\n| project Value = AppDisplayName, Label = strcat(AppDisplayName, ' - ', Count, ' sign-ins'), Selected = false\r\n",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "limitSelectTo": 10,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "0611ecce-d6a0-4a6f-a1bc-6be314ae36a7",
                  "version": "KqlParameterItem/1.0",
                  "name": "UserNamePrefix",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where UserDisplayName != UserPrincipalName\r\n| summarize Count = count() by UserPrincipalName\r\n| order by Count desc, UserPrincipalName asc\r\n| project Value = UserPrincipalName, Label = strcat(UserPrincipalName, ' - ', Count, ' sign-ins'), Selected = false\r\n| extend prefix = substring(Value, 0, 1)\r\n| distinct prefix\r\n| sort by prefix asc",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "f7f7970b-58c1-474f-9043-62243d2d4edd",
                  "version": "KqlParameterItem/1.0",
                  "name": "Users",
                  "label": "UserName",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "AADNonInteractiveUserSignInLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName != UserPrincipalName\r\n| summarize Count = count() by UserPrincipalName\r\n| order by Count desc, UserPrincipalName asc\r\n| project Value = UserPrincipalName, Label = UserPrincipalName, Selected = false\r\n| where (substring(Value, 0, 1) in ({UserNamePrefix})) or ('*' in ({UserNamePrefix}))\r\n| sort by Value asc\r\n",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "limitSelectTo": 10000000,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "85568f4e-9ad4-46c5-91d4-0ee1b2c8f3aa",
                  "version": "KqlParameterItem/1.0",
                  "name": "Category",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": ""
                  },
                  "jsonData": "[\"SignInLogs\", \"NonInteractiveUserSignInLogs\"]"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "Country",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Country = iff(LocationDetails.countryOrRegion == '', 'Unknown country', tostring(LocationDetails.countryOrRegion))\r\n| summarize Count = count() by Country\r\n| order by Count desc, Country asc\r\n| project Value = Country, Label = strcat(Country, ' - ', Count, ' sign-ins'), Selected = false\r\n",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "limitSelectTo": 100,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 1209600000
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "1811a412-73bf-4ee0-bab8-7129c143b318"
                },
                {
                  "id": "0157c44e-c30b-4252-97d5-6ad03047fa2e",
                  "version": "KqlParameterItem/1.0",
                  "name": "About",
                  "type": 10,
                  "description": "Explanatory Note ",
                  "isRequired": true,
                  "value": "Hide",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\n    \"Show\",\n    \"Hide\"\n]"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 1"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Azure Overview\n\nThis workbook is designed to provide an overview to allow management to understand the overall sign-in status of your Microsoft 365 tenant.\n\nRef: https://techcommunity.microsoft.com/t5/microsoft-sentinel-blog/azure-sentinel-workbooks-101-with-sample-workbook/ba-p/1409216",
                    "style": "success"
                  },
                  "name": "text - 1",
                  "styleSettings": {
                    "margin": "0px"
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Explanatory Note (draft version created on Jul 31, 2022)\n\nThis workbook is designed to be provide an overview to management. I have designed in the format to be print as a report for distribution.\n\n",
                    "style": "upsell"
                  },
                  "name": "text - 2"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "### [DATC] - Azure AD Workbook (by: Frankie Li)\n\nI design the workbook. Some queries are modified from examples from Microsoft or Microsoft Sentinel Communities. The community, organizations, and business entities can freely use all my works. However, if any MSP wants to use my work for business purposes, please get in touch with frankie@dragonadvancetech.com for permission before deploying it to your client's tenant.\n\n![Image Name](https://www.borza.com/clogo/dragonadvancetech.com.png?width=85&height=30) ",
                    "style": "info"
                  },
                  "name": "text - 0",
                  "styleSettings": {
                    "margin": "opx"
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "About",
              "comparison": "isEqualTo",
              "value": "Show"
            },
            "name": "AboutGroup - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let data = \nunion SigninLogs,AADNonInteractiveUserSignInLogs\n| where Category in ({Category})\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\n| where UserPrincipalName in ({Users});\ndata\n| summarize count() by UserDisplayName, bin_at(TimeGenerated, 1h, now())",
              "size": 0,
              "showAnnotations": true,
              "title": "Sign-In Timechart",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "timechart"
            },
            "customWidth": "75",
            "name": "query - 9"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// [DATC] - Show the Sign-In Risk for further monitoring\n//let keywords = dynamic([\"Low\", \"Medium\", \"High\"]);\nlet keywords = dynamic([\"Medium\", \"High\"]);\nIdentityInfo \n// ---------- interesting fields ----------\n// | distinct RiskLevel, RiskState, RiskLevelDetails, IsAccountEnabled, AccountUPN, OnPremisesDistinguishedName, GroupMembership\n| where RiskLevel has_any (keywords)\n| where AccountUPN in ({Users})\n//| project TimeGenerated, AccountDisplayName, RiskLevel, RiskState, IsAccountEnabled\n| summarize Counts = count() by AccountDisplayName, RiskLevel, RiskState\n| sort by Counts",
              "size": 0,
              "title": "Active Sign-In Risk by Users",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "AccountDisplayName",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Counts",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Simos Simeonidis",
                    "color": "red"
                  },
                  {
                    "seriesName": "Ryan Chang",
                    "color": "magenta"
                  },
                  {
                    "seriesName": "abgip4",
                    "color": "magenta"
                  }
                ]
              }
            },
            "customWidth": "25",
            "name": "SignInRisk",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let nonInteractive = AADNonInteractiveUserSignInLogs\n| extend LocationDetails = parse_json(LocationDetails)\n| extend Status = parse_json(Status)\n| extend DeviceDetail = parse_json(DeviceDetail)\n| extend ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies);\nlet data=\nunion SigninLogs,nonInteractive\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\n| where UserDisplayName != UserPrincipalName\n|where UserPrincipalName in ({Users}) \n| where Category in ({Category})\n| extend ErrorCode = tostring(Status.errorCode) \n| extend FailureReason = tostring(Status.failureReason) \n| extend TimeFromNow = now() - TimeGenerated\n| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\n| where ErrorCode !in (\"0\")\n| project TimeGenerated, UserPrincipalName, UserDisplayName, IPAddress, LocationDetails.countryOrRegion, ErrorCode;\ndata\n| summarize Count = count() by UserDisplayName\n| top 6 by Count",
              "size": 1,
              "title": "Login Success User (Top 6)",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Time generated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "User",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "Country or region",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "HK",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "❌ Error Code",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "Sign-in Time",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "App",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Error code",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result signature",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access policies",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Operating system",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Browser",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "State",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "City",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "User principal name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Category",
                    "formatter": 5
                  }
                ],
                "rowLimit": 200
              },
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "UserDisplayName",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "showBorder": false
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "UserPrincipalName",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "Count",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "40",
            "name": "LoginSuccess-T6"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let nonInteractive = AADNonInteractiveUserSignInLogs\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Status = parse_json(Status);\r\nlet data = \r\nunion SigninLogs,nonInteractive\r\n| where Category in ({Category})\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n//|where UserDisplayName in ({Users}) \r\n| where UserDisplayName != UserPrincipalName\r\n| where UserPrincipalName in ({Users}) \r\n|extend errorCode = Status.errorCode\r\n|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Need MFA\", errorCode == 50074, \"Not pass MFA\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", errorCode == 50020, \"Tokens Issue\", errorCode == 50089, \"Token Issue\", errorCode == 500121, \"Not pass MFA\", errorCode == 500121, \"Not pass MFA\", errorCode == 50076, \"Not pass MFA\", errorCode == 50079, \"Need MFA\", errorCode == 50121, \"Not pass MFA\", errorCode == 50055, \"Invalid password\", errorCode == 50126, \"Invalid password\", errorCode == 50133, \"Invalid password\", errorCode == 50057, \"Disabled account\", \"Failure\");\r\ndata\r\n| summarize Count = count() by SigninStatus\r\n| join kind = fullouter (datatable(SigninStatus:string)['Success', 'Pending action (Interrupts)', 'Tokens Issue', 'Not pass MFA', \"Disabled account\", \"Invalid password\", \"Need MFA\", 'Failure']) on SigninStatus\r\n| project SigninStatus = iff(SigninStatus == '', SigninStatus1, SigninStatus), Count = iff(SigninStatus == '', 0, Count)\r\n| join kind = inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus)\r\n    on SigninStatus\r\n| project-away SigninStatus1, TimeGenerated\r\n| extend Status = SigninStatus\r\n| union (\r\n    data \r\n    | summarize Count = count()\r\n    | extend jkey = 1\r\n    | join kind=inner (data\r\n        | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n        | extend jkey = 1) on jkey\r\n    | extend SigninStatus = 'All Sign-ins', Status = '*'    \r\n)\r\n| order by Count desc\r\n\r\n\r\n\r\n",
              "size": 1,
              "title": "All Sign-ins Success and Failure (with reason)",
              "timeContextFromParameter": "TimeRange",
              "exportFieldName": "Status",
              "exportParameterName": "SigninStatus",
              "exportDefaultValue": "*",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "SigninStatus",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 9,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "customWidth": "60",
            "name": "Sigin-success-fail"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AuditLogs\n| where OperationName contains \"strong authentication\" or OperationName contains \"password\" or OperationName contains \"security\"\n// | where OperationName == \"registered security info\" or OperationName == \"Disable account\" or OperationName == \"Remove users strong authentication phone app detail\" or OperationName == \"Disable Strong Authentication\" or OperationName == \"User deleted security info\" or OperationName contains \"Change password\" or OperationName == \"Enable Strong Authentication\"| where OperationName contains \"strong authentication\" or OperationName contains \"security\"\n// more (device, user, group, registered, service principal, license, StsRefreshTokenValidFrom\n| mv-expand targetRes = TargetResources\n| extend targetUser = targetRes.userPrincipalName\n| extend initUser = InitiatedBy.user.userPrincipalName\n| where targetUser in ({Users})\n//| project TimeGenerated, OperationName, targetUser, initUser, Result, ResultReason\n| summarize Count = count() by OperationName\n",
              "size": 1,
              "title": "Changes in Security Info or MFA Status",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "13ch"
                    }
                  },
                  {
                    "columnMatch": "OperationName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "targetUser",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "initUser",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "TargetUser",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "ConfiguredBy",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "ResultReason",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "OperationName",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Update user",
                    "label": "Update User"
                  },
                  {
                    "seriesName": "Self-service password reset flow activity progress",
                    "label": "Self Password Reset"
                  },
                  {
                    "seriesName": "Update StsRefreshTokenValidFrom Timestamp",
                    "label": "Refresh Token"
                  },
                  {
                    "seriesName": "Change user password",
                    "label": "Change Password"
                  },
                  {
                    "seriesName": "Other",
                    "label": "Other"
                  },
                  {
                    "seriesName": "Reset user password",
                    "label": "Reset User Password"
                  }
                ]
              }
            },
            "customWidth": "25",
            "name": "SecInfo or MFA",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let nonInteractive = AADNonInteractiveUserSignInLogs\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Status = parse_json(Status);\r\nlet data = \r\nunion SigninLogs,nonInteractive\r\n| extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n//| where UserDisplayName in ({Users})\r\n| where UserDisplayName != UserPrincipalName\r\n| where UserPrincipalName in ({Users})\r\n| extend Country = iff(LocationDetails.countryOrRegion == '', 'Unknown country', tostring(LocationDetails.countryOrRegion))\r\n| where Country in ({Country}) or '*' in ({Country})\r\n| extend City = iff(LocationDetails.city == '', 'Unknown city', tostring(LocationDetails.city))\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins';\r\nlet countryData = data\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Country,Category\r\n| join kind=inner\r\n(\r\n    data\r\n| make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by  Country\r\n| project-away TimeGenerated\r\n)\r\non Country\r\n| project Country, TotalCount, SuccessCount,FailureCount,InterruptCount,Trend,Category\r\n| order by TotalCount desc, Country asc;\r\ndata\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Country, City,Category\r\n| join kind=inner\r\n(\r\n    data    \r\n| make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Country, City\r\n| project-away TimeGenerated\r\n)\r\non Country, City\r\n| order by TotalCount desc, Country asc\r\n| project Country, City,TotalCount, SuccessCount,FailureCount,InterruptCount, Trend,Category\r\n| join kind=inner\r\n(\r\n    countryData\r\n)\r\non Country\r\n| project Id = City, Name = City, Type = 'City', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = Country,Category\r\n| union (countryData\r\n| project Id = Country, Name = Country, Type = 'Country', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = 'root',Category)\r\n| where Category in ({Category})\r\n| where Name != 'Unknown country' and Name != 'Unknown city'\r\n| order by ['Sign-in Count'] desc, Name asc\r\n",
              "size": 1,
              "showAnalytics": true,
              "title": "Sign-ins by Location",
              "showRefreshButton": true,
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "fieldName": "Name",
                  "parameterName": "LocationDetail",
                  "parameterType": 1
                }
              ],
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Id",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "HK",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "IN",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "SG",
                          "representation": "brown",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "DE",
                          "representation": "blueDarkDark",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "JP",
                          "representation": "turquoise",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Unknown country",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "Type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Sign-in Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blueDark",
                      "customColumnWidthSetting": "17ch"
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Trend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    }
                  },
                  {
                    "columnMatch": "Failure Count|Interrupt Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "customColumnWidthSetting": "19ch"
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Success Rate",
                    "formatter": 5,
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "percent"
                      }
                    }
                  },
                  {
                    "columnMatch": "ParentId",
                    "formatter": 5
                  }
                ],
                "filter": true,
                "hierarchySettings": {
                  "idColumn": "Id",
                  "parentColumn": "ParentId",
                  "treeType": 0,
                  "expanderColumn": "Name",
                  "expandTopLevel": false
                }
              }
            },
            "customWidth": "75",
            "showPin": true,
            "name": "query - 8"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Multiple success login from same IP - Updated by KM on 20220729.kql\r\n// In AADNonInteractiveUserSignInLogs table below columns are string type (but in SigninLogs the same colums are dictionary or array type), we need to convert it before join two tables.\r\nlet nonInteractive = AADNonInteractiveUserSignInLogs\r\n    | extend\r\n        LocationDetails = parse_json(LocationDetails),\r\n        Status = parse_json(Status),\r\n        ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies),\r\n        DeviceDetail =parse_json(DeviceDetail);\r\n// Convert Sentinel Workbook's selected item to Dynamic type\r\nlet details = dynamic({\"Name\": \"\", \"Type\": \"*\"});\r\n// Join Tables SigninLogs and AADNonInteractiveUserSignInLogs\r\nlet data = union SigninLogs,nonInteractive\r\n    | extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n    | where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n    | where UserDisplayName != UserPrincipalName\r\n    | where UserPrincipalName in ({Users})\r\n    | extend Country = tostring(LocationDetails.countryOrRegion)  // String: Country\r\n    | where Country in ({Country}) or '*' in ({Country})\r\n    | extend City = tostring(LocationDetails.city)  // String: City\r\n    | extend ErrorCode = (Status.errorCode)  // Long: ErrorCode\r\n    | extend SigninStatus = case(\r\n        ErrorCode == 0, \"Success\", \r\n        ErrorCode == 16000, \"Pending user action\", \r\n        ErrorCode == 16001, \"Pending user action\", \r\n        ErrorCode == 16003, \"Pending user action\", \r\n        ErrorCode == 50055, \"Pending user action\", \r\n        ErrorCode == 50058, \"Pending user action\", \r\n        ErrorCode == 50059, \"Pending user action\", \r\n        ErrorCode == 50072, \"Pending user action\", \r\n        ErrorCode == 50074, \"Pending user action\", \r\n        ErrorCode == 50125, \"Pending user action\", \r\n        ErrorCode == 50127, \"Pending user action\", \r\n        ErrorCode == 50129, \"Pending user action\", \r\n        ErrorCode == 50140, \"Pending user action\", \r\n        ErrorCode == 50143, \"Pending user action\", \r\n        ErrorCode == 50144, \"Pending user action\", \r\n        ErrorCode == 51006, \"Pending user action\", \r\n        ErrorCode == 52004, \"Pending user action\", \r\n        ErrorCode == 65001, \"Pending user action\", \r\n        ErrorCode == 81010, \"Pending user action\", \r\n        ErrorCode == 81012, \"Pending user action\", \r\n        ErrorCode == 81014, \"Pending user action\", \r\n        \"Failure\"\r\n    )  // if not match above, SigninStatus will assign \"Failure\"\r\n    | where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins'\r\n    | where Category in ({Category})  // Table: SigninLogs and/or AADNonInteractiveUserSignInLogs\r\n    | where details.Type == '*' or (details.Type == 'Country' and Country == details.Name) or (details.Type == 'City' and City == details.Name)\r\n    | top 250 by TimeGenerated desc\r\n    | extend TimeFromNow = now() - TimeGenerated\r\n    | extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\r\n    | summarize ['Unique Users'] = dcount(UserPrincipalName) by IPAddress, Country\r\n    | where ['Unique Users'] > 1;  // Add ; to close the 'let data' function variable\r\ndata\r\n\r\n// let nonInteractive = AADNonInteractiveUserSignInLogs\r\n// | extend LocationDetails = parse_json(LocationDetails),Status = parse_json(Status),ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies),DeviceDetail =parse_json(DeviceDetail);\r\n// let details = dynamic({ \"Name\":\"\", \"Type\":\"*\"});\r\n// let data = union SigninLogs,nonInteractive\r\n// | extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n// |where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n// //|where UserDisplayName in ({Users}) \r\n// | where UserDisplayName != UserPrincipalName\r\n// | where UserPrincipalName in ({Users})\r\n// | extend Country = tostring(LocationDetails.countryOrRegion)\r\n// |where Country in ({Country}) or '*' in ({Country})\r\n// | extend City = tostring(LocationDetails.city)\r\n// | extend errorCode = Status.errorCode\r\n// | extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\")\r\n// //|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\", errorCode == 50020, \"Unable to issue tokens\", errorCode == 50089, \"Flow token expired\", errorCode == 70044, \"Others\", errorCode == 500121, \"Failed during MFA\", errorCode == 500121, \"Failed during MFA\", errorCode == 50076, \"Not pass MFA\", errorCode == 50079, \"Not pass MFA\")\r\n// | where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins'\r\n// | where details.Type == '*' or (details.Type == 'Country' and Country == details.Name) or (details.Type == 'City' and City == details.Name);\r\n// data\r\n// | top 200 by TimeGenerated desc\r\n// | extend TimeFromNow = now() - TimeGenerated\r\n// | extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\r\n// // | where Country != 'HK' and SigninStatus == 'Success'\r\n// | summarize ['Unique Users'] = dcount(UserPrincipalName) by IPAddress, Country\r\n// | where ['Unique Users'] > 1\r\n// | project IPAddress, User = UserPrincipalName, ['Sign-in Status'] = strcat(iff(SigninStatus == 'Success', '✔️', '❌'), ' ', SigninStatus), ['Sign-in Time'] = TimeAgo, App = AppDisplayName, ['Error code'] = errorCode, ['Result type'] = ResultType, ['Result signature'] = ResultSignature, ['Result description'] = ResultDescription, ['Conditional access policies'] = ConditionalAccessPolicies, ['Conditional access status'] = ConditionalAccessStatus, ['Operating system'] = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser, ['Country or region'] = LocationDetails.countryOrRegion, ['State'] = LocationDetails.state, ['City'] = LocationDetails.city, ['Time generated'] = TimeGenerated, Status, ['User principal name'] = UserPrincipalName, Category\r\n// | where Category in ({Category})",
              "size": 1,
              "showAnalytics": true,
              "title": "Multiple success login from same IP",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "IPAddress",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "16ch"
                    }
                  },
                  {
                    "columnMatch": "Country",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "HK",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "Unique Users",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "Sign-in Status",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "CellDetails"
                    }
                  },
                  {
                    "columnMatch": "App",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Error code",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result signature",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result description",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access policies",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Operating system",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Browser",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Country or region",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "State",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "City",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Time generated",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "User principal name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 5
                  }
                ],
                "filter": true
              }
            },
            "customWidth": "24",
            "name": "query - 8"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//Success login out of HK - Updated by KM on 20220728\r\n// In AADNonInteractiveUserSignInLogs table below columns are string type (but in SigninLogs the same colums are dictionary or array type), we need to convert it before join two tables.\r\nlet nonInteractive = AADNonInteractiveUserSignInLogs\r\n    | extend\r\n        LocationDetails = parse_json(LocationDetails),\r\n        Status = parse_json(Status),\r\n        ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies),\r\n        DeviceDetail =parse_json(DeviceDetail);\r\n// Convert Sentinel Workbook's selected item to Dynamic type\r\nlet details = dynamic({\"Name\": \"\", \"Type\": \"*\"});\r\n// Join Tables SigninLogs and AADNonInteractiveUserSignInLogs\r\nlet data = union SigninLogs,nonInteractive\r\n    | extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n    | where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n    | where UserDisplayName != UserPrincipalName\r\n    | where UserPrincipalName in ({Users})\r\n    | extend Country = tostring(LocationDetails.countryOrRegion)  // String: Country\r\n    | where Country in ({Country}) or '*' in ({Country})\r\n    | extend City = tostring(LocationDetails.city)  // String: City\r\n    | extend ErrorCode = (Status.errorCode)  // Long: ErrorCode\r\n    | extend SigninStatus = case(ErrorCode == 0, \"Success\", ErrorCode == 50058, \"Pending user action\", ErrorCode == 50140, \"Pending user action\", ErrorCode == 51006, \"Pending user action\", ErrorCode == 50059, \"Pending user action\", ErrorCode == 65001, \"Pending user action\", ErrorCode == 52004, \"Pending user action\", ErrorCode == 50055, \"Pending user action\", ErrorCode == 50144, \"Pending user action\", ErrorCode == 50072, \"Pending user action\", ErrorCode == 50074, \"Pending user action\", ErrorCode == 16000, \"Pending user action\", ErrorCode == 16001, \"Pending user action\", ErrorCode == 16003, \"Pending user action\", ErrorCode == 50127, \"Pending user action\", ErrorCode == 50125, \"Pending user action\", ErrorCode == 50129, \"Pending user action\", ErrorCode == 50143, \"Pending user action\", ErrorCode == 81010, \"Pending user action\", ErrorCode == 81014, \"Pending user action\", ErrorCode == 81012, \"Pending user action\", \"Failure\")\r\n    | where SigninStatus != 'Failure'  // Included \"Success\" and \"Pending user action\", but NOT \"Failure\"\r\n    | where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins'\r\n    //| extend FailureReason = tostring(Status.failureReason)\r\n    | where Category in ({Category})  // Table: SigninLogs and/or AADNonInteractiveUserSignInLogs\r\n    | where details.Type == '*' or (details.Type == 'Country' and Country == details.Name) or (details.Type == 'City' and City == details.Name)\r\n    | where Country != 'HK' and isnotempty(Country)\r\n    | summarize Count = count() by UserPrincipalName, Country\r\n    | sort by Count;\r\ndata\r\n\r\n// let nonInteractive = AADNonInteractiveUserSignInLogs\r\n// | extend LocationDetails = parse_json(LocationDetails),Status = parse_json(Status),ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies),DeviceDetail =parse_json(DeviceDetail);\r\n// let details = dynamic({ \"Name\":\"\", \"Type\":\"*\"});\r\n// let data = union SigninLogs,nonInteractive\r\n// | extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n// | where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n// //| where UserDisplayName in ({Users})\r\n// | where UserDisplayName != UserPrincipalName\r\n// | where UserPrincipalName in ({Users})\r\n// | extend Country = tostring(LocationDetails.countryOrRegion)\r\n// | where Country in ({Country}) or '*' in ({Country})\r\n// | extend City = tostring(LocationDetails.city)\r\n// | extend errorCode = Status.errorCode\r\n// | extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\")\r\n// | where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins'\r\n// | where Category in ({Category})\r\n// | where details.Type == '*' or (details.Type == 'Country' and Country == details.Name) or (details.Type == 'City' and City == details.Name);\r\n// data\r\n// | where Country != 'HK' and isnotempty(Country)\r\n// | summarize Count = count(UserPrincipalName) by UserPrincipalName, Country\r\n// | sort by Count",
              "size": 1,
              "showAnalytics": true,
              "title": "Success login out of HK",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "UserPrincipalName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "40ch"
                    }
                  },
                  {
                    "columnMatch": "IPAddress",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "18ch"
                    }
                  },
                  {
                    "columnMatch": "Country",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "SG",
                          "representation": "pink",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "AL",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "Count",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "orange",
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "Sign-in Status",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "CellDetails"
                    }
                  },
                  {
                    "columnMatch": "App",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Error code",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result signature",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result description",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access policies",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Operating system",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Browser",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Country or region",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "State",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "City",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Time generated",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "User principal name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 5
                  }
                ],
                "filter": true
              }
            },
            "customWidth": "38",
            "name": "query - 8"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Login Failure out of HK - Updated by KM on 20220728\n// In AADNonInteractiveUserSignInLogs table below columns are string type (but in SigninLogs the same colums are dictionary or array type), we need to convert it before join two tables.\nlet nonInteractive = AADNonInteractiveUserSignInLogs\n    | extend LocationDetails = parse_json(LocationDetails), Status = parse_json(Status), ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies), DeviceDetail =parse_json(DeviceDetail);\n// Join Tables SigninLogs and AADNonInteractiveUserSignInLogs\nlet data = union SigninLogs,nonInteractive\n    | extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\n    | where AppDisplayName in ({Apps}) or '*' in ({Apps})\n    | where UserDisplayName != UserPrincipalName\n    | where UserPrincipalName in ({Users})\n    | extend Country = tostring(LocationDetails.countryOrRegion)  // String: Country\n    | where Category in ({Category})  // Table: SigninLogs and/or AADNonInteractiveUserSignInLogs\n    | extend ErrorCode = (Status.errorCode)  // Long: ErrorCode\n    | extend FailureReason = tostring(Status.failureReason)\n    | extend SigninStatus = iff(ErrorCode in (\"0\", \"16000\", \"16001\", \"16003\", \"50020\", \"50057\", \"50058\", \"50059\", \"50072\", \"50074\", \"50076\", \"50079\", \"50089\", \"50125\", \"50127\", \"50129\", \"50133\", \"50140\", \"50143\", \"50144\", \"50148\", \"51006\", \"52004\", \"65001\", \"70044\", \"81010\", \"81012\", \"81014\", \"500121\"), 'Success', 'Failure')\n    | where SigninStatus == 'Failure'  // Filter out Failure cases\n    | where Country != 'HK' and isnotempty(Country)\n    | summarize Count = count() by UserPrincipalName, Country\n    | sort by Count;\ndata",
              "size": 1,
              "title": "Login Failure out of HK",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "UserPrincipalName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "40ch"
                    }
                  },
                  {
                    "columnMatch": "IPAddress",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "18ch"
                    }
                  },
                  {
                    "columnMatch": "Country",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "SG",
                          "representation": "pink",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "IN",
                          "representation": "red",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "JP",
                          "representation": "turquoise",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "Count",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "orange",
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "❌ Error Code",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Sign-in Time",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "App",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Error code",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result signature",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access policies",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Operating system",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Browser",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "State",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "City",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "User principal name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Category",
                    "formatter": 5
                  }
                ],
                "filter": true
              }
            },
            "customWidth": "38",
            "name": "query - 1",
            "styleSettings": {
              "maxWidth": "100%"
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "overview"
      },
      "name": "overview"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "User Identity Assessment",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "13f56671-7604-4427-a4d8-663f3da0cbc5",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "type": 4,
                  "isRequired": true,
                  "value": {
                    "durationMs": 2592000000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000,
                        "createdTime": "2018-11-13T19:33:10.162Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 900000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 1800000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 3600000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 14400000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 43200000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 86400000,
                        "createdTime": "2018-11-13T19:33:10.165Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 172800000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 259200000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 604800000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 1209600000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 2592000000,
                        "createdTime": "2018-11-13T19:33:10.167Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      }
                    ],
                    "allowCustom": true
                  }
                },
                {
                  "id": "3b5cc420-8ad8-4523-ba28-a54910756794",
                  "version": "KqlParameterItem/1.0",
                  "name": "Apps",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n| summarize Count = count() by AppDisplayName\r\n| order by Count desc, AppDisplayName asc\r\n| project Value = AppDisplayName, Label = strcat(AppDisplayName, ' - ', Count, ' sign-ins'), Selected = false\r\n",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "limitSelectTo": 10,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "0611ecce-d6a0-4a6f-a1bc-6be314ae36a7",
                  "version": "KqlParameterItem/1.0",
                  "name": "UserNamePrefix",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where UserDisplayName != UserPrincipalName\r\n| summarize Count = count() by UserPrincipalName\r\n| order by Count desc, UserPrincipalName asc\r\n| project Value = UserPrincipalName, Label = strcat(UserPrincipalName, ' - ', Count, ' sign-ins'), Selected = false\r\n| extend prefix = substring(Value, 0, 1)\r\n| distinct prefix\r\n| sort by prefix asc",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "f7f7970b-58c1-474f-9043-62243d2d4edd",
                  "version": "KqlParameterItem/1.0",
                  "name": "Users",
                  "label": "UserName",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "AADNonInteractiveUserSignInLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName != UserPrincipalName\r\n| summarize Count = count() by UserPrincipalName\r\n| order by Count desc, UserPrincipalName asc\r\n| project Value = UserPrincipalName, Label = UserPrincipalName, Selected = false\r\n| where (substring(Value, 0, 1) in ({UserNamePrefix})) or ('*' in ({UserNamePrefix}))\r\n| sort by Value asc\r\n",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "limitSelectTo": 10000000,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "85568f4e-9ad4-46c5-91d4-0ee1b2c8f3aa",
                  "version": "KqlParameterItem/1.0",
                  "name": "Category",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": ""
                  },
                  "jsonData": "[\"SignInLogs\", \"NonInteractiveUserSignInLogs\"]"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "Country",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Country = iff(LocationDetails.countryOrRegion == '', 'Unknown country', tostring(LocationDetails.countryOrRegion))\r\n| summarize Count = count() by Country\r\n| order by Count desc, Country asc\r\n| project Value = Country, Label = strcat(Country, ' - ', Count, ' sign-ins'), Selected = false\r\n",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "limitSelectTo": 100,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 1209600000
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "1811a412-73bf-4ee0-bab8-7129c143b318"
                },
                {
                  "id": "0157c44e-c30b-4252-97d5-6ad03047fa2e",
                  "version": "KqlParameterItem/1.0",
                  "name": "About",
                  "type": 10,
                  "description": "Explanatory Note ",
                  "isRequired": true,
                  "value": "Hide",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\n    \"Show\",\n    \"Hide\"\n]"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 1"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Identity Assessment \n\nThis workbook is designed to help analysts to perform an triage investigation of sign-in status and operations of the tenant's users. The data sources are from various tables, including SigninLogs. AADNonInteractiveUserSignInLogs and AuditLogs. We believe it is critical if the tenant needs to keep monitoring the identity telemetry by using this workbook to detect any possible possible account takeover or compromise.\n\n\n## What are non-interactive logins?\n \nNon-interactive user sign-ins are sign-ins that were performed by a client app or an OS component on behalf of a user. Like interactive user sign-ins, these sign-ins are done on behalf of a user. Unlike interactive user sign-ins, these sign-ins do not require the user to supply an Authentication factor. Instead, the device or client app uses a token or code to authenticate or access a resource on behalf of a user. In general, the user will perceive these sign-ins as happening in the background of the user’s activity.\n\nRef: https://techcommunity.microsoft.com/t5/microsoft-sentinel-blog/non-interactive-logins-minimizing-the-blind-spot/ba-p/2287932",
                    "style": "success"
                  },
                  "name": "text - 1",
                  "styleSettings": {
                    "margin": "0px"
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Explanatory Note (draft version created on Jul 31, 2022)\n\n* Detect brute forcing attacks (needs to be further updated)\n* Detect suspicious logins\n* Detect MFA and enabled/disabled MFA\n* Detect Password changes\n* Detect permission changes\n",
                    "style": "upsell"
                  },
                  "name": "text - 2"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "### [DATC] - Azure AD Workbook (by: Frankie Li)\n\nI design the workbook. Some queries are modified from examples from Microsoft or Microsoft Sentinel Communities. The community, organizations, and business entities can freely use all my works. However, if any MSP wants to use my work for business purposes, please get in touch with frankie@dragonadvancetech.com for permission before deploying it to your client's tenant.\n\n![Image Name](https://www.borza.com/clogo/dragonadvancetech.com.png?width=85&height=30) ",
                    "style": "info"
                  },
                  "name": "text - 0",
                  "styleSettings": {
                    "margin": "opx"
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "About",
              "comparison": "isEqualTo",
              "value": "Show"
            },
            "name": "AboutGroup"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let nonInteractive = AADNonInteractiveUserSignInLogs\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Status = parse_json(Status);\r\nlet data = \r\nunion SigninLogs,nonInteractive|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n//| where UserDisplayName in ({Users}) \r\n| where UserDisplayName != UserPrincipalName\r\n| where UserPrincipalName in ({Users}) \r\n| extend ErrorCode = tostring(Status.errorCode) \r\n| extend FailureReason = tostring(Status.failureReason) \r\n| where ErrorCode !in (\"0\", \"50020\",\"50057\",\"50058\", \"50059\",\"50072\", \"50074\", \"50076\", \"50079\", \"50089\", \"50125\", \"50127\", \"50129\",\"50133\",\"50140\",\"50143\", \"50144\",\"50148\", \"51006\", \"52004\", \"16000\",\"16001\", \"16003\", \"65001\", \"70044\", \"81010\", \"81014\", \"81012\", \"500121\") \r\n|summarize errCount = count() by ErrorCode, tostring(FailureReason), Category| sort by errCount, Category\r\n|project ['❌ Error Code'] = ErrorCode, ['Reason']= FailureReason, ['Error Count'] = toint(errCount), Category\r\n|where Category in ({Category});\r\ndata",
              "size": 1,
              "showAnalytics": true,
              "title": "Summary of top errors",
              "timeContextFromParameter": "TimeRange",
              "exportFieldName": "❌ Error Code",
              "exportParameterName": "ErrorCode",
              "exportDefaultValue": "*",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "❌ Error Code",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "failed",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "18ch"
                    }
                  },
                  {
                    "columnMatch": "Reason",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "75%"
                    }
                  },
                  {
                    "columnMatch": "Error Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "customColumnWidthSetting": "12ch"
                    }
                  }
                ],
                "rowLimit": 150,
                "sortBy": [
                  {
                    "itemKey": "$gen_heatmap_Error Count_2",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_heatmap_Error Count_2",
                  "sortOrder": 2
                }
              ]
            },
            "customWidth": "40",
            "showPin": true,
            "name": "query - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Login Failure (including: Invalid passwords) - Updated by KM on 20220729.kql\n// In AADNonInteractiveUserSignInLogs table below columns are string type (but in SigninLogs the same colums are dictionary or array type), we need to convert it before join two tables.\nlet nonInteractive = AADNonInteractiveUserSignInLogs\n    | extend LocationDetails = parse_json(LocationDetails), Status = parse_json(Status), parse_json(ConditionalAccessPolicies), parse_json(DeviceDetail);\n// Join Tables SigninLogs and AADNonInteractiveUserSignInLogs\nlet data = union SigninLogs,nonInteractive\n    | extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\n    | where AppDisplayName in ({Apps}) or '*' in ({Apps})\n    | where UserDisplayName != UserPrincipalName\n    | where UserPrincipalName in ({Users}) or '*' in ({Users})\n    | extend ErrorCode = tostring(Status.errorCode)\n    | extend FailureReason = tostring(Status.failureReason)\n    | where ErrorCode !in (\"0\", \"16000\", \"16001\", \"16003\", \"50020\", \"50057\", \"50058\", \"50059\", \"50072\", \"50074\", \"50076\", \"50079\", \"50089\", \"50125\", \"50127\", \"50129\", \"50133\", \"50140\", \"50143\", \"50144\", \"50148\", \"51006\", \"52004\", \"65001\", \"70044\", \"81010\", \"81012\", \"81014\", \"500121\")\n    | where '{ErrorCode}' == '*' or '{ErrorCode}' == ErrorCode\n    | top 200 by TimeGenerated desc\n    | extend TimeFromNow = now() - TimeGenerated\n    | extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\n    | project ['Time generated'] = TimeGenerated, User = UserPrincipalName, IPAddress, ['Country or region'] = LocationDetails.countryOrRegion, ['❌ Error Code'] = ErrorCode, ['Result description'] = ResultDescription, ['Sign-in Time'] = TimeAgo, App = AppDisplayName, ['Error code'] = ErrorCode, ['Result type'] = ResultType, ['Result signature'] = ResultSignature, ['Conditional access policies'] = ConditionalAccessPolicies, ['Conditional access status'] = ConditionalAccessStatus, ['Operating system'] = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser, ['State'] = LocationDetails.state, ['City'] = LocationDetails.city,  Status, ['User principal name'] = UserPrincipalName, Category\n    | where Category in ({Category});\ndata",
              "size": 1,
              "title": "Login Failure (including: Invalid passwords)",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Time generated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "22ch"
                    }
                  },
                  {
                    "columnMatch": "User",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "IPAddress",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "Country or region",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "HK",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "14ch"
                    }
                  },
                  {
                    "columnMatch": "❌ Error Code",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "Result description",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "50%"
                    }
                  },
                  {
                    "columnMatch": "Sign-in Time",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "App",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Error code",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result signature",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access policies",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Operating system",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Browser",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "State",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "City",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "User principal name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Category",
                    "formatter": 5
                  }
                ],
                "rowLimit": 200
              }
            },
            "customWidth": "60",
            "name": "query - 1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let nonInteractive = AADNonInteractiveUserSignInLogs\n| extend LocationDetails = parse_json(LocationDetails)\n| extend Status = parse_json(Status)\n| extend DeviceDetail = parse_json(DeviceDetail)\n| extend ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies);\nlet data=\nunion SigninLogs,nonInteractive\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\n//|where UserDisplayName in ({Users}) or '*' in ({Users})\n| where UserDisplayName != UserPrincipalName\n| where UserPrincipalName in ({Users})\n| extend ErrorCode = tostring(Status.errorCode) \n| extend FailureReason = tostring(Status.failureReason) \n// | extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\")\n| where ErrorCode in (\"50020\",\"50057\", \"50072\", \"50074\", \"50076\", \"50079\", \"50089\", \"50133\", \"70044\", \"500121\") \n| where '{ErrorCode}' == '*' or '{ErrorCode}' == ErrorCode\n| top 200 by TimeGenerated desc\n| extend TimeFromNow = now() - TimeGenerated\n// | extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\n//| project ['Time generated'] = TimeGenerated, User = UserPrincipalName, IPAddress, ['Result description'] = ResultDescription, ['❌ Error Code'] = ErrorCode, ['Sign-in Time'] = TimeAgo, App = AppDisplayName, ['Error code'] = ErrorCode, ['Result type'] = ResultType, ['Result signature'] = ResultSignature, ['Conditional access policies'] = ConditionalAccessPolicies, ['Conditional access status'] = ConditionalAccessStatus, ['Operating system'] = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser, ['Country or region'] = LocationDetails.countryOrRegion, ['State'] = LocationDetails.state, ['City'] = LocationDetails.city,  Status, ['User principal name'] = UserPrincipalName, Category\n//| where Category in ({Category});\n// | where ResultDescription == \"*not found*\"\n| project ['Time generated'] = TimeGenerated, User = UserPrincipalName, ['Operating system'] = DeviceDetail.operatingSystem, IPAddress, ['Region'] = LocationDetails.countryOrRegion, ['City'] = LocationDetails.city, ['❌ Error Code'] = ErrorCode, ResultDescription;\ndata",
              "size": 1,
              "title": "Login failure because of MFA failure or Token Expired",
              "timeContext": {
                "durationMs": 604800000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Time generated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "User",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "35ch"
                    }
                  },
                  {
                    "columnMatch": "Operating system",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "IPAddress",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "Region",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "HK",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "CN",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "City",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "18ch"
                    }
                  },
                  {
                    "columnMatch": "❌ Error Code",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "18ch"
                    }
                  },
                  {
                    "columnMatch": "ResultDescription",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "40%"
                    }
                  }
                ]
              }
            },
            "customWidth": "100",
            "name": "query - 3"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let nonInteractive = AADNonInteractiveUserSignInLogs\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Status = parse_json(Status);\r\nlet data = \r\nunion SigninLogs,nonInteractive\r\n| where Category in ({Category})\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n//|where UserDisplayName in ({Users}) \r\n| where UserDisplayName != UserPrincipalName\r\n| where UserPrincipalName in ({Users}) \r\n|extend errorCode = Status.errorCode\r\n|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\");\r\ndata\r\n| summarize Count = count() by SigninStatus\r\n| join kind = fullouter (datatable(SigninStatus:string)['Success', 'Pending action (Interrupts)', 'Failure']) on SigninStatus\r\n| project SigninStatus = iff(SigninStatus == '', SigninStatus1, SigninStatus), Count = iff(SigninStatus == '', 0, Count)\r\n| join kind = inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus)\r\n    on SigninStatus\r\n| project-away SigninStatus1, TimeGenerated\r\n| extend Status = SigninStatus\r\n| union (\r\n    data \r\n    | summarize Count = count()\r\n    | extend jkey = 1\r\n    | join kind=inner (data\r\n        | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n        | extend jkey = 1) on jkey\r\n    | extend SigninStatus = 'All Sign-ins', Status = '*'    \r\n)\r\n| order by Count desc\r\n\r\n\r\n\r\n",
              "size": 1,
              "timeContextFromParameter": "TimeRange",
              "exportFieldName": "Status",
              "exportParameterName": "SigninStatus",
              "exportDefaultValue": "*",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "SigninStatus",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 9,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "customWidth": "20",
            "name": "query - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let nonInteractive = AADNonInteractiveUserSignInLogs\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Status = parse_json(Status);\r\nlet data = \r\nunion SigninLogs,nonInteractive\r\n| extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n//| where UserDisplayName in ({Users})\r\n| where UserDisplayName != UserPrincipalName\r\n| where UserPrincipalName in ({Users})\r\n| extend Country = iff(LocationDetails.countryOrRegion == '', 'Unknown country', tostring(LocationDetails.countryOrRegion))\r\n| where Country in ({Country}) or '*' in ({Country})\r\n| extend City = iff(LocationDetails.city == '', 'Unknown city', tostring(LocationDetails.city))\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins';\r\nlet countryData = data\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Country,Category\r\n| join kind=inner\r\n(\r\n    data\r\n| make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by  Country\r\n| project-away TimeGenerated\r\n)\r\non Country\r\n| project Country, TotalCount, SuccessCount,FailureCount,InterruptCount,Trend,Category\r\n| order by TotalCount desc, Country asc;\r\ndata\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Country, City,Category\r\n| join kind=inner\r\n(\r\n    data    \r\n| make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Country, City\r\n| project-away TimeGenerated\r\n)\r\non Country, City\r\n| order by TotalCount desc, Country asc\r\n| project Country, City,TotalCount, SuccessCount,FailureCount,InterruptCount, Trend,Category\r\n| join kind=inner\r\n(\r\n    countryData\r\n)\r\non Country\r\n| project Id = City, Name = City, Type = 'City', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = Country,Category\r\n| union (countryData\r\n| project Id = Country, Name = Country, Type = 'Country', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = 'root',Category)\r\n| where Category in ({Category})\r\n| where Name != 'Unknown country' and Name != 'Unknown city'\r\n| order by ['Sign-in Count'] desc, Name asc\r\n",
              "size": 1,
              "showAnalytics": true,
              "title": "Sign-ins by Location",
              "showRefreshButton": true,
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "fieldName": "Name",
                  "parameterName": "LocationDetail",
                  "parameterType": 1
                }
              ],
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Id",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "HK",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "IN",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "SG",
                          "representation": "brown",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "DE",
                          "representation": "blueDarkDark",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "JP",
                          "representation": "turquoise",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Unknown country",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "Type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Sign-in Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blueDark",
                      "customColumnWidthSetting": "15ch"
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Trend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    }
                  },
                  {
                    "columnMatch": "Failure Count|Interrupt Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "customColumnWidthSetting": "15ch"
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Success Rate",
                    "formatter": 5,
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "percent"
                      }
                    }
                  },
                  {
                    "columnMatch": "ParentId",
                    "formatter": 5
                  }
                ],
                "filter": true,
                "hierarchySettings": {
                  "idColumn": "Id",
                  "parentColumn": "ParentId",
                  "treeType": 0,
                  "expanderColumn": "Name",
                  "expandTopLevel": false
                }
              }
            },
            "customWidth": "35",
            "showPin": true,
            "name": "query - 8"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AuditLogs\n| where OperationName contains \"strong authentication\" or OperationName contains \"password\" or OperationName contains \"security\"\n// | where OperationName == \"registered security info\" or OperationName == \"Disable account\" or OperationName == \"Remove users strong authentication phone app detail\" or OperationName == \"Disable Strong Authentication\" or OperationName == \"User deleted security info\" or OperationName contains \"Change password\" or OperationName == \"Enable Strong Authentication\"| where OperationName contains \"strong authentication\" or OperationName contains \"security\"\n// more (device, user, group, registered, service principal, license, StsRefreshTokenValidFrom\n| mv-expand targetRes = TargetResources\n| extend targetUser = targetRes.userPrincipalName\n| extend initUser = InitiatedBy.user.userPrincipalName\n| where targetUser in ({Users})\n| project TimeGenerated, OperationName, targetUser, initUser, Result, ResultReason\n",
              "size": 1,
              "title": "Changes in Security Info or MFA Status",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "OperationName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "targetUser",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "initUser",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "ResultReason",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "40ch"
                    }
                  },
                  {
                    "columnMatch": "TargetUser",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "ConfiguredBy",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  }
                ],
                "filter": true
              },
              "sortBy": []
            },
            "customWidth": "45",
            "name": "SecInfo or MFA"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let nonInteractive = AADNonInteractiveUserSignInLogs\r\n| extend LocationDetails = parse_json(LocationDetails),Status = parse_json(Status),ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies),DeviceDetail =parse_json(DeviceDetail);\r\nlet details = dynamic({ \"Name\":\"\", \"Type\":\"*\"});\r\nlet data = union SigninLogs,nonInteractive\r\n| extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n//|where UserDisplayName in ({Users}) \r\n| where UserDisplayName != UserPrincipalName\r\n| where UserPrincipalName in ({Users})\r\n| extend Country = tostring(LocationDetails.countryOrRegion)\r\n|where Country in ({Country}) or '*' in ({Country})\r\n| extend City = tostring(LocationDetails.city)\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\")\r\n//|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\", errorCode == 50020, \"Unable to issue tokens\", errorCode == 50089, \"Flow token expired\", errorCode == 70044, \"Others\", errorCode == 500121, \"Failed during MFA\", errorCode == 500121, \"Failed during MFA\", errorCode == 50076, \"Not pass MFA\", errorCode == 50079, \"Not pass MFA\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins'\r\n| where details.Type == '*' or (details.Type == 'Country' and Country == details.Name) or (details.Type == 'City' and City == details.Name);\r\ndata\r\n| top 200 by TimeGenerated desc\r\n| extend TimeFromNow = now() - TimeGenerated\r\n| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\r\n// | where Country != 'HK' and SigninStatus == 'Success'\r\n| summarize ['Unique Users'] = dcount(UserPrincipalName) by IPAddress, Country\r\n| where ['Unique Users'] > 1\r\n//| project IPAddress, User = UserPrincipalName, ['Sign-in Status'] = strcat(iff(SigninStatus == 'Success', '✔️', '❌'), ' ', SigninStatus), ['Sign-in Time'] = TimeAgo, App = AppDisplayName, ['Error code'] = errorCode, ['Result type'] = ResultType, ['Result signature'] = ResultSignature, ['Result description'] = ResultDescription, ['Conditional access policies'] = ConditionalAccessPolicies, ['Conditional access status'] = ConditionalAccessStatus, ['Operating system'] = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser, ['Country or region'] = LocationDetails.countryOrRegion, ['State'] = LocationDetails.state, ['City'] = LocationDetails.city, ['Time generated'] = TimeGenerated, Status, ['User principal name'] = UserPrincipalName, Category\r\n//| where Category in ({Category})",
              "size": 1,
              "showAnalytics": true,
              "title": "Multiple success login from same IP",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "IPAddress",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "Country",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "HK",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "Unique Users",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "17ch"
                    }
                  },
                  {
                    "columnMatch": "Sign-in Status",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "CellDetails"
                    }
                  },
                  {
                    "columnMatch": "App",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Error code",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result signature",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result description",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access policies",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Operating system",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Browser",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Country or region",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "State",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "City",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Time generated",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "User principal name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 5
                  }
                ],
                "filter": true
              }
            },
            "customWidth": "20",
            "name": "query - 8"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let nonInteractive = AADNonInteractiveUserSignInLogs\r\n| extend LocationDetails = parse_json(LocationDetails),Status = parse_json(Status),ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies),DeviceDetail =parse_json(DeviceDetail);\r\nlet details = dynamic({ \"Name\":\"\", \"Type\":\"*\"});\r\nlet data = union SigninLogs,nonInteractive\r\n| extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n//| where UserDisplayName in ({Users})\r\n| where UserDisplayName != UserPrincipalName\r\n| where UserPrincipalName in ({Users})\r\n| extend Country = tostring(LocationDetails.countryOrRegion)\r\n| where Country in ({Country}) or '*' in ({Country})\r\n| extend City = tostring(LocationDetails.city)\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins'\r\n| where Category in ({Category})\r\n| where details.Type == '*' or (details.Type == 'Country' and Country == details.Name) or (details.Type == 'City' and City == details.Name);\r\ndata\r\n| where Country != 'HK' and isnotempty(Country)\r\n| summarize Count = count(UserPrincipalName) by UserPrincipalName, Country\r\n| sort by Count",
              "size": 1,
              "showAnalytics": true,
              "title": "Success login out of HK",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Country",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "SG",
                          "representation": "pink",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "AL",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Count",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "orange"
                    }
                  },
                  {
                    "columnMatch": "Sign-in Status",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "CellDetails"
                    }
                  },
                  {
                    "columnMatch": "App",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Error code",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result signature",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result description",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access policies",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Operating system",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Browser",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Country or region",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "State",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "City",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Time generated",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "User principal name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 5
                  }
                ],
                "filter": true
              }
            },
            "customWidth": "40",
            "name": "query - 8"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Login Failure out of HK - Updated by KM on 20220728\n// In AADNonInteractiveUserSignInLogs table below columns are string type (but in SigninLogs the same colums are dictionary or array type), we need to convert it before join two tables.\nlet nonInteractive = AADNonInteractiveUserSignInLogs\n    | extend LocationDetails = parse_json(LocationDetails), Status = parse_json(Status), ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies), DeviceDetail =parse_json(DeviceDetail);\n// Join Tables SigninLogs and AADNonInteractiveUserSignInLogs\nlet data = union SigninLogs,nonInteractive\n    | extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\n    | where AppDisplayName in ({Apps}) or '*' in ({Apps})\n    | where UserDisplayName != UserPrincipalName\n    | where UserPrincipalName in ({Users})\n    | extend Country = tostring(LocationDetails.countryOrRegion)  // String: Country\n    | where Category in ({Category})  // Table: SigninLogs and/or AADNonInteractiveUserSignInLogs\n    | extend ErrorCode = (Status.errorCode)  // Long: ErrorCode\n    | extend FailureReason = tostring(Status.failureReason)\n    | extend SigninStatus = iff(ErrorCode in (\"0\", \"16000\", \"16001\", \"16003\", \"50020\", \"50057\", \"50058\", \"50059\", \"50072\", \"50074\", \"50076\", \"50079\", \"50089\", \"50125\", \"50127\", \"50129\", \"50133\", \"50140\", \"50143\", \"50144\", \"50148\", \"51006\", \"52004\", \"65001\", \"70044\", \"81010\", \"81012\", \"81014\", \"500121\"), 'Success', 'Failure')\n    | where SigninStatus == 'Failure'  // Filter out Failure cases\n    | where '{ErrorCode}' == '*' or '{ErrorCode}' == ErrorCode\n    | where Country != 'HK' and isnotempty(Country)\n    | summarize Count = count() by UserPrincipalName, Country\n    | sort by Count;\ndata\n\n// let nonInteractive = AADNonInteractiveUserSignInLogs\n// | extend LocationDetails = parse_json(LocationDetails)\n// | extend Status = parse_json(Status)\n// | extend DeviceDetail = parse_json(DeviceDetail)\n// | extend ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies);\n// let data=\n// union SigninLogs,nonInteractive\n// |where AppDisplayName in ({Apps}) or '*' in ({Apps})\n// //|where UserDisplayName in ({Users}) \n// | where UserDisplayName != UserPrincipalName\n// | where UserPrincipalName in ({Users})\n// | extend ErrorCode = tostring(Status.errorCode) \n// | extend FailureReason = tostring(Status.failureReason) \n// | where ErrorCode !in (\"0\",\"50058\",\"50148\",\"50140\", \"51006\", \"50059\", \"65001\", \"52004\", \"50055\", \"50144\",\"50072\", \"50074\", \"16000\",\"16001\", \"16003\", \"50127\", \"50125\", \"50129\",\"50143\", \"81010\", \"81014\", \"81012\") \n// | where '{ErrorCode}' == '*' or '{ErrorCode}' == ErrorCode\n// //| top 200 by TimeGenerated desc\n// //| extend TimeFromNow = now() - TimeGenerated\n// //| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\n// | where LocationDetails.countryOrRegion != 'HK'\n// | summarize Count = count(UserDisplayName) by UserPrincipalName, Country = tostring(LocationDetails.countryOrRegion)\n// | sort by Count;\n// data",
              "size": 1,
              "title": "Login Failure out of HK",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Country",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "SG",
                          "representation": "pink",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "IN",
                          "representation": "red",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "JP",
                          "representation": "turquoise",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Count",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "orange"
                    }
                  },
                  {
                    "columnMatch": "❌ Error Code",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Sign-in Time",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "App",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Error code",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result signature",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access policies",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Operating system",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Browser",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "State",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "City",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "User principal name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Category",
                    "formatter": 5
                  }
                ],
                "filter": true
              }
            },
            "customWidth": "40",
            "name": "query - 1",
            "styleSettings": {
              "maxWidth": "100%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// [DATC] - Show the Sign-In Risk for further monitoring\n//let keywords = dynamic([\"Low\", \"Medium\", \"High\"]);\nlet keywords = dynamic([\"Medium\", \"High\"]);\nIdentityInfo \n// ---------- interesting fields ----------\n// | distinct RiskLevel, RiskState, RiskLevelDetails, IsAccountEnabled, AccountUPN, OnPremisesDistinguishedName, GroupMembership\n| where RiskLevel has_any (keywords)\n| where AccountUPN in ({Users})\n//| where IsAccountEnabled != \"true\"\n| project TimeGenerated, AccountDisplayName, AccountUPN, RiskLevel, RiskState, IsAccountEnabled, OnPremisesDistinguishedName, GroupMembership\n",
              "size": 0,
              "title": "Active Sign-In Risk by Users",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "18ch"
                    }
                  },
                  {
                    "columnMatch": "AccountDisplayName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "18ch"
                    }
                  },
                  {
                    "columnMatch": "AccountUPN",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "RiskLevel",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "red",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Medium",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "green",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "RiskState",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "IsAccountEnabled",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "5ch"
                    }
                  },
                  {
                    "columnMatch": "OnPremisesDistinguishedName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "GroupMembership",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "180ch"
                    }
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "IsAccountEnabled",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "IsAccountEnabled",
                  "sortOrder": 1
                }
              ],
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "AccountDisplayName",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Counts",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Simos Simeonidis",
                    "color": "red"
                  },
                  {
                    "seriesName": "Ryan Chang",
                    "color": "magenta"
                  },
                  {
                    "seriesName": "abgip4",
                    "color": "magenta"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "SignInRisk-Grid"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// [DATC] - Display Risky Sign-ins details\n//let RiskKeywords = dynamic([\"Low\", \"Medium\", \"High\"]);\n//let evtKeywords = dynamic([\"generic\", \"unfamiliarFeatures\", \"unlikelyTravel\", \"anonymizedIPAddress\"]);\nlet RiskKeywords = dynamic([\"hidden\", \"medium\", \"high\"]);\nlet evtKeywords = dynamic([\"unfamiliarFeatures\", \"unlikelyTravel\"]);\nAADUserRiskEvents\n| mv-expand AdditionalInfo\n| mv-expand Location\n| where RiskDetail has_any (RiskKeywords)\n| where RiskEventType has_any (evtKeywords)\n| where isnotempty(Location.countryOrRegion) and isnotempty(AdditionalInfo.Value)\n| project TimeGenerated, UserDisplayName, RiskLevel, RiskEventType, IpAddress, Location.countryOrRegion, AdditionalInfo.Value, UserPrincipalName\n\n\n",
              "size": 0,
              "title": "Risky Sign-ins Details",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "18ch"
                    }
                  },
                  {
                    "columnMatch": "UserDisplayName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "RiskLevel",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "RiskEventType",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "IpAddress",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "18ch"
                    }
                  },
                  {
                    "columnMatch": "Location_countryOrRegion",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "FR",
                          "representation": "pink",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "8ch"
                    }
                  },
                  {
                    "columnMatch": "AdditionalInfo_Value",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "60ch"
                    }
                  },
                  {
                    "columnMatch": "UserPrincipalName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "35ch"
                    }
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "risky-signins"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "IdentAssess"
      },
      "name": "IdentAssess"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Identity Configuration",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "13f56671-7604-4427-a4d8-663f3da0cbc5",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "type": 4,
                  "isRequired": true,
                  "value": {
                    "durationMs": 2592000000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000,
                        "createdTime": "2018-11-13T19:33:10.162Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 900000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 1800000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 3600000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 14400000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 43200000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 86400000,
                        "createdTime": "2018-11-13T19:33:10.165Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 172800000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 259200000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 604800000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 1209600000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 2592000000,
                        "createdTime": "2018-11-13T19:33:10.167Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      }
                    ],
                    "allowCustom": true
                  }
                },
                {
                  "id": "3b5cc420-8ad8-4523-ba28-a54910756794",
                  "version": "KqlParameterItem/1.0",
                  "name": "Apps",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n| summarize Count = count() by AppDisplayName\r\n| order by Count desc, AppDisplayName asc\r\n| project Value = AppDisplayName, Label = strcat(AppDisplayName, ' - ', Count, ' sign-ins'), Selected = false\r\n",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "limitSelectTo": 10,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "0611ecce-d6a0-4a6f-a1bc-6be314ae36a7",
                  "version": "KqlParameterItem/1.0",
                  "name": "UserNamePrefix",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where UserDisplayName != UserPrincipalName\r\n| summarize Count = count() by UserPrincipalName\r\n| order by Count desc, UserPrincipalName asc\r\n| project Value = UserPrincipalName, Label = strcat(UserPrincipalName, ' - ', Count, ' sign-ins'), Selected = false\r\n| extend prefix = substring(Value, 0, 1)\r\n| distinct prefix\r\n| sort by prefix asc",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "f7f7970b-58c1-474f-9043-62243d2d4edd",
                  "version": "KqlParameterItem/1.0",
                  "name": "Users",
                  "label": "UserName",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "AADNonInteractiveUserSignInLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName != UserPrincipalName\r\n| summarize Count = count() by UserPrincipalName\r\n| order by Count desc, UserPrincipalName asc\r\n| project Value = UserPrincipalName, Label = UserPrincipalName, Selected = false\r\n| where (substring(Value, 0, 1) in ({UserNamePrefix})) or ('*' in ({UserNamePrefix}))\r\n| sort by Value asc\r\n",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "limitSelectTo": 10000000,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "85568f4e-9ad4-46c5-91d4-0ee1b2c8f3aa",
                  "version": "KqlParameterItem/1.0",
                  "name": "Category",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "AuditLogs\n| distinct Category\n| sort by Category asc\n",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "",
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "Country",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Country = iff(LocationDetails.countryOrRegion == '', 'Unknown country', tostring(LocationDetails.countryOrRegion))\r\n| summarize Count = count() by Country\r\n| order by Count desc, Country asc\r\n| project Value = Country, Label = strcat(Country, ' - ', Count, ' sign-ins'), Selected = false\r\n",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "limitSelectTo": 100,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 1209600000
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "1811a412-73bf-4ee0-bab8-7129c143b318"
                },
                {
                  "id": "6b6d977b-4d40-4f08-b9a5-1f4e2c423655",
                  "version": "KqlParameterItem/1.0",
                  "name": "OperationName",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "AuditLogs\n//| where OperationName contains \"permission\"\n| distinct OperationName",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "0157c44e-c30b-4252-97d5-6ad03047fa2e",
                  "version": "KqlParameterItem/1.0",
                  "name": "About",
                  "type": 10,
                  "description": "Explanatory Note ",
                  "isRequired": true,
                  "value": "Hide",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\n    \"Show\",\n    \"Hide\"\n]"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 1"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Identity Configuration (draft version created on Jul 31, 2022)\n\nThis workbook is designed to extract the security details from AuditLogs\n\nRef: ",
                    "style": "success"
                  },
                  "name": "text - 1",
                  "styleSettings": {
                    "margin": "0px"
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Explanatory Note (draft version created on Jul 31, 2022)\n\n* Detect MFA and enabled/disabled MFA\n* Detect Password changes\n* Detect permission changes\n\n\n",
                    "style": "upsell"
                  },
                  "name": "text - 2"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "### [DATC] - Azure AD Workbook (by: Frankie Li)\n\nI design the workbook. Some queries are modified from examples from Microsoft or Microsoft Sentinel Communities. The community, organizations, and business entities can freely use all my works. However, if any MSP wants to use my work for business purposes, please get in touch with frankie@dragonadvancetech.com for permission before deploying it to your client's tenant.\n\n![Image Name](https://www.borza.com/clogo/dragonadvancetech.com.png?width=85&height=30) ",
                    "style": "info"
                  },
                  "name": "text - 0",
                  "styleSettings": {
                    "margin": "opx"
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "About",
              "comparison": "isEqualTo",
              "value": "Show"
            },
            "name": "AboutGroup"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let nonInteractive = AADNonInteractiveUserSignInLogs\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Status = parse_json(Status);\r\nlet data = \r\nunion SigninLogs,nonInteractive\r\n//| where Category in ({Category})\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n//|where UserDisplayName in ({Users}) \r\n| where UserDisplayName != UserPrincipalName\r\n| where UserPrincipalName in ({Users}) \r\n|extend errorCode = Status.errorCode\r\n|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\");\r\ndata\r\n| summarize Count = count() by SigninStatus\r\n| join kind = fullouter (datatable(SigninStatus:string)['Success', 'Pending action (Interrupts)', 'Failure']) on SigninStatus\r\n| project SigninStatus = iff(SigninStatus == '', SigninStatus1, SigninStatus), Count = iff(SigninStatus == '', 0, Count)\r\n| join kind = inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus)\r\n    on SigninStatus\r\n| project-away SigninStatus1, TimeGenerated\r\n| extend Status = SigninStatus\r\n| union (\r\n    data \r\n    | summarize Count = count()\r\n    | extend jkey = 1\r\n    | join kind=inner (data\r\n        | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n        | extend jkey = 1) on jkey\r\n    | extend SigninStatus = 'All Sign-ins', Status = '*'    \r\n)\r\n| order by Count desc\r\n\r\n\r\n\r\n",
              "size": 1,
              "timeContextFromParameter": "TimeRange",
              "exportFieldName": "Status",
              "exportParameterName": "SigninStatus",
              "exportDefaultValue": "*",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "SigninStatus",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 9,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "customWidth": "28",
            "name": "query - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let nonInteractive = AADNonInteractiveUserSignInLogs\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Status = parse_json(Status);\r\nlet data = \r\nunion SigninLogs,nonInteractive\r\n| extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n//| where UserDisplayName in ({Users})\r\n| where UserDisplayName != UserPrincipalName\r\n| where UserPrincipalName in ({Users})\r\n| extend Country = iff(LocationDetails.countryOrRegion == '', 'Unknown country', tostring(LocationDetails.countryOrRegion))\r\n| where Country in ({Country}) or '*' in ({Country})\r\n| extend City = iff(LocationDetails.city == '', 'Unknown city', tostring(LocationDetails.city))\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins';\r\nlet countryData = data\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Country,Category\r\n| join kind=inner\r\n(\r\n    data\r\n| make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by  Country\r\n| project-away TimeGenerated\r\n)\r\non Country\r\n| project Country, TotalCount, SuccessCount,FailureCount,InterruptCount,Trend,Category\r\n| order by TotalCount desc, Country asc;\r\ndata\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Country, City,Category\r\n| join kind=inner\r\n(\r\n    data    \r\n| make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Country, City\r\n| project-away TimeGenerated\r\n)\r\non Country, City\r\n| order by TotalCount desc, Country asc\r\n| project Country, City,TotalCount, SuccessCount,FailureCount,InterruptCount, Trend,Category\r\n| join kind=inner\r\n(\r\n    countryData\r\n)\r\non Country\r\n| project Id = City, Name = City, Type = 'City', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = Country,Category\r\n| union (countryData\r\n| project Id = Country, Name = Country, Type = 'Country', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = 'root',Category)\r\n//| where Category in ({Category})\r\n| where Name != 'Unknown country' and Name != 'Unknown city'\r\n| order by ['Sign-in Count'] desc, Name asc\r\n",
              "size": 1,
              "showAnalytics": true,
              "title": "Sign-ins by Location",
              "showRefreshButton": true,
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "fieldName": "Name",
                  "parameterName": "LocationDetail",
                  "parameterType": 1
                }
              ],
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Id",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "HK",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "IN",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "SG",
                          "representation": "brown",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "DE",
                          "representation": "blueDarkDark",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "JP",
                          "representation": "turquoise",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Unknown country",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "Type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Sign-in Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blueDark",
                      "customColumnWidthSetting": "10ch"
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Trend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    }
                  },
                  {
                    "columnMatch": "Failure Count|Interrupt Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "customColumnWidthSetting": "10ch"
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Success Rate",
                    "formatter": 5,
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "percent"
                      }
                    }
                  },
                  {
                    "columnMatch": "ParentId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Category",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  }
                ],
                "filter": true,
                "hierarchySettings": {
                  "idColumn": "Id",
                  "parentColumn": "ParentId",
                  "treeType": 0,
                  "expanderColumn": "Name",
                  "expandTopLevel": false
                },
                "sortBy": [
                  {
                    "itemKey": "$gen_heatmap_Failure Count|Interrupt Count_6",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_heatmap_Failure Count|Interrupt Count_6",
                  "sortOrder": 2
                }
              ]
            },
            "customWidth": "30",
            "showPin": true,
            "name": "query - 8"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AuditLogs\n| where OperationName contains \"strong authentication\" or OperationName contains \"password\" or OperationName contains \"security\"\n| mv-expand targetRes = TargetResources\n| extend targetUser = targetRes.userPrincipalName\n| extend initUser = InitiatedBy.user.userPrincipalName\n| where not(initUser contains \"AllyBridge.onmicrosoft.com\")\n| where targetUser in ({Users}) \n| where Category in ({Category}) \n| project TimeGenerated, targetUser, OperationName, Result, SetupBy = initUser, ResultReason",
              "size": 1,
              "title": "Changes in Security Info or MFA Status",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "targetUser",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "OperationName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "Result",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "failure",
                          "representation": "failed",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "SetupBy",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "ResultReason",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  }
                ]
              }
            },
            "customWidth": "40",
            "name": "SecInfo or MFA "
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AuditLogs\n// | where OperationName contains \"strong authentication\" or OperationName contains \"password\" or OperationName contains \"security\"// | where OperationName == \"registered security info\" or OperationName == \"Disable account\" or OperationName == \"Remove users strong authentication phone app detail\" or OperationName == \"Disable Strong Authentication\" or OperationName == \"User deleted security info\" or OperationName contains \"Change password\" or OperationName == \"Enable Strong Authentication\"| where OperationName contains \"strong authentication\" or OperationName contains \"security\"\n| where not(OperationName contains \"strong authentication\" or OperationName contains \"password\" or OperationName contains \"security\")\n| mv-expand targetRes = TargetResources\n| extend targetUser = targetRes.userPrincipalName\n| extend initUser = InitiatedBy.user.userPrincipalName\n| where not(initUser contains \"AllyBridge.onmicrosoft.com\" or initUser contains \"@support.onmicrosoft.com\")\n| where targetUser in ({Users}) \n| where Category in ({Category}) \n//| summarize Count = count() by tostring(targetUser)\n| summarize Count = count() by tostring(targetUser)",
              "size": 0,
              "title": "Operation by User",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart"
            },
            "customWidth": "50",
            "name": "Operation by User-chart"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AuditLogs\n// | where OperationName contains \"strong authentication\" or OperationName contains \"password\" or OperationName contains \"security\"// | where OperationName == \"registered security info\" or OperationName == \"Disable account\" or OperationName == \"Remove users strong authentication phone app detail\" or OperationName == \"Disable Strong Authentication\" or OperationName == \"User deleted security info\" or OperationName contains \"Change password\" or OperationName == \"Enable Strong Authentication\"| where OperationName contains \"strong authentication\" or OperationName contains \"security\"\n| where not(OperationName contains \"strong authentication\" or OperationName contains \"password\" or OperationName contains \"security\")\n| mv-expand targetRes = TargetResources\n| extend targetUser = targetRes.userPrincipalName\n| extend initUser = InitiatedBy.user.userPrincipalName\n| where not(initUser contains \"AllyBridge.onmicrosoft.com\" or initUser contains \"@support.onmicrosoft.com\")\n| where targetUser in ({Users}) \n| where Category in ({Category}) \n//| summarize Count = count() by tostring(targetUser)\n| summarize Count = count() by OperationName",
              "size": 0,
              "title": "By Operation Name by User",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "OperationName",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Update StsRefreshTokenValidFrom Timestamp",
                    "label": "Update Token"
                  },
                  {
                    "seriesName": "Add registered owner to device",
                    "label": "Registered Owner"
                  },
                  {
                    "seriesName": "Add registered users to device",
                    "label": "Registered User"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "by-Operation"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AuditLogs\n// | where OperationName contains \"strong authentication\" or OperationName contains \"password\" or OperationName contains \"security\"// | where OperationName == \"registered security info\" or OperationName == \"Disable account\" or OperationName == \"Remove users strong authentication phone app detail\" or OperationName == \"Disable Strong Authentication\" or OperationName == \"User deleted security info\" or OperationName contains \"Change password\" or OperationName == \"Enable Strong Authentication\"| where OperationName contains \"strong authentication\" or OperationName contains \"security\"\n| where not(OperationName contains \"strong authentication\" or OperationName contains \"password\" or OperationName contains \"security\")\n| mv-expand targetRes = TargetResources\n| extend targetUser = targetRes.userPrincipalName\n| extend initUser = InitiatedBy.user.userPrincipalName\n| where not(initUser contains \"AllyBridge.onmicrosoft.com\" or initUser contains \"@support.onmicrosoft.com\")\n| where targetUser in ({Users}) \n| where Category in ({Category}) \n| project TimeGenerated, targetUser, OperationName, Result, SetupBy = initUser, ResultReason",
              "size": 1,
              "title": "Changes in Security Info or MFA Status",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "13ch"
                    }
                  },
                  {
                    "columnMatch": "OperationName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "targetUser",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "initUser",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "TargetUser",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "ConfiguredBy",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "ResultReason",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  }
                ]
              },
              "sortBy": []
            },
            "customWidth": "40",
            "name": "All other Configuration"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AuditLogs\n// | where OperationName contains \"strong authentication\" or OperationName contains \"password\" or OperationName contains \"security\"// | where OperationName == \"registered security info\" or OperationName == \"Disable account\" or OperationName == \"Remove users strong authentication phone app detail\" or OperationName == \"Disable Strong Authentication\" or OperationName == \"User deleted security info\" or OperationName contains \"Change password\" or OperationName == \"Enable Strong Authentication\"| where OperationName contains \"strong authentication\" or OperationName contains \"security\"\n//| where not(OperationName contains \"strong authentication\" or OperationName contains \"password\" or OperationName contains \"security\")\n| mv-expand targetRes = TargetResources\n| extend targetUser = targetRes.userPrincipalName\n| extend initUser = InitiatedBy.user.userPrincipalName\n| where not(initUser contains \"AllyBridge.onmicrosoft.com\" or initUser contains \"@support.onmicrosoft.com\")\n| where targetUser in ({Users}) \n| where Category in ({Category}) \n| summarize Count = count() by OperationName",
              "size": 0,
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart",
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Self-service password reset flow activity progress",
                    "label": "Self password reset"
                  },
                  {
                    "seriesName": "Add member to group",
                    "label": "Add member to group"
                  },
                  {
                    "seriesName": "Update StsRefreshTokenValidFrom Timestamp",
                    "label": "Update Refresh Token"
                  },
                  {
                    "seriesName": "Remove member from group",
                    "label": "Remove member to group"
                  }
                ]
              }
            },
            "customWidth": "60",
            "name": "query - 8"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// [DATC] - Any AAD configuration activities performed by tenant members \n// Frankie: 3-07-22, 2807-22\nAuditLogs\n| where LoggedByService != \"\" \n| extend IpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))\n| extend InitBy = iff(isnotempty(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))\n| mv-expand targetRes = TargetResources\n| extend targetUser = targetRes.userPrincipalName\n| extend UserAgent = iff(AdditionalDetails[0].key =~ \"User-Agent\", tostring(AdditionalDetails[0].value), \"\")\n| where targetUser in ({Users}) \n| where Category in ({Category})\n| where OperationName in ({OperationName})\n| project TimeGenerated, InitBy, targetUser, OperationName, Category, ResultReason, ActivityDisplayName, IpAddress, UserAgent\n",
              "size": 0,
              "title": "AAD Configured (include: MFA enabled & Permission Changes )",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "InitBy",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "targetUser",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "OperationName",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "contains",
                          "thresholdValue": "Authentication",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "password",
                          "representation": "red",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "disable",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "grant",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "authentication",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "Password",
                          "representation": "red",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "Category",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "ResultReason",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "ActivityDisplayName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "IpAddress",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "18ch"
                    }
                  },
                  {
                    "columnMatch": "UserAgent",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  }
                ]
              }
            },
            "name": "ADDConfig"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "IdentConfig"
      },
      "name": "IdentConfig"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Security Settings & MFA",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "13f56671-7604-4427-a4d8-663f3da0cbc5",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "type": 4,
                  "isRequired": true,
                  "value": {
                    "durationMs": 604800000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000,
                        "createdTime": "2018-11-13T19:33:10.162Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 900000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 1800000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 3600000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 14400000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 43200000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 86400000,
                        "createdTime": "2018-11-13T19:33:10.165Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 172800000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 259200000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 604800000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 1209600000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 2592000000,
                        "createdTime": "2018-11-13T19:33:10.167Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      }
                    ],
                    "allowCustom": true
                  }
                },
                {
                  "id": "3b5cc420-8ad8-4523-ba28-a54910756794",
                  "version": "KqlParameterItem/1.0",
                  "name": "Apps",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n| summarize Count = count() by AppDisplayName\r\n| order by Count desc, AppDisplayName asc\r\n| project Value = AppDisplayName, Label = strcat(AppDisplayName, ' - ', Count, ' sign-ins'), Selected = false\r\n",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "limitSelectTo": 10,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "0611ecce-d6a0-4a6f-a1bc-6be314ae36a7",
                  "version": "KqlParameterItem/1.0",
                  "name": "UserNamePrefix",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where UserDisplayName != UserPrincipalName\r\n| summarize Count = count() by UserPrincipalName\r\n| order by Count desc, UserPrincipalName asc\r\n| project Value = UserPrincipalName, Label = strcat(UserPrincipalName, ' - ', Count, ' sign-ins'), Selected = false\r\n| extend prefix = substring(Value, 0, 1)\r\n| distinct prefix\r\n| sort by prefix asc",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "40956bdc-fc3a-40da-9cc7-ba4d6d626fb0",
                  "version": "KqlParameterItem/1.0",
                  "name": "Users",
                  "label": "UserName",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "AADNonInteractiveUserSignInLogs\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\n| where UserDisplayName != UserPrincipalName\n| summarize Count = count() by UserPrincipalName\n| order by Count desc, UserPrincipalName asc\n| project Value = UserPrincipalName, Label = strcat(UserPrincipalName), Selected = false\n// project Value = UserPrincipalName, Label = strcat(UserPrincipalName, ' - ', Count, ' sign-ins'), Selected = false \n| where (substring(Value, 0, 1) in ({UserNamePrefix})) or ('*' in ({UserNamePrefix}))\n| sort by Value asc\n",
                  "typeSettings": {
                    "limitSelectTo": 100000,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "85568f4e-9ad4-46c5-91d4-0ee1b2c8f3aa",
                  "version": "KqlParameterItem/1.0",
                  "name": "Category",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "SignInLogs"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": ""
                  },
                  "jsonData": "[\"SignInLogs\", \"NonInteractiveUserSignInLogs\"]"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "Country",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Country = iff(LocationDetails.countryOrRegion == '', 'Unknown country', tostring(LocationDetails.countryOrRegion))\r\n| summarize Count = count() by Country\r\n| order by Count desc, Country asc\r\n| project Value = Country, Label = strcat(Country, ' - ', Count, ' sign-ins'), Selected = false\r\n",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "limitSelectTo": 100,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 1209600000
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "1811a412-73bf-4ee0-bab8-7129c143b318"
                },
                {
                  "id": "05e7f8be-a9b2-4295-bbee-ab25559f5892",
                  "version": "KqlParameterItem/1.0",
                  "name": "AuthProc",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "singleFactorAuthentication"
                  ],
                  "typeSettings": {
                    "limitSelectTo": 3,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "jsonData": "[\"singleFactorAuthentication\", \"multiFactorAuthentication\"]"
                },
                {
                  "id": "0157c44e-c30b-4252-97d5-6ad03047fa2e",
                  "version": "KqlParameterItem/1.0",
                  "name": "About",
                  "type": 10,
                  "description": "Explanatory Note ",
                  "isRequired": true,
                  "value": "Hide",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\n    \"Show\",\n    \"Hide\"\n]"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 1"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## What is MFA?\n\nMultifactor authentication (MFA) adds a layer of protection to the sign-in process. When accessing accounts or apps, users provide additional identity verification, such as scanning a fingerprint or entering a code received by phone.\n\n## How it works: Azure AD Multi-Factor Authentication\n\nMulti-factor authentication is a process in which users are prompted during the sign-in process for an additional form of identification, such as a code on their cellphone or a fingerprint scan.\nIf you only use a password to authenticate a user, it leaves an insecure vector for attack. If the password is weak or has been exposed elsewhere, an attacker could be using it to gain access. When you require a second form of authentication, security is increased because this additional factor isn't something that's easy for an attacker to obtain or duplicate.\n\nRef: https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-mfa-howitworks",
                    "style": "success"
                  },
                  "name": "text - 1",
                  "styleSettings": {
                    "margin": "0px"
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Explanatory Note (draft version created on Jul 31, 2022)\n\n* Detect brute forcing attacks (needs to be further updated)\n* Detect suspicious logins\n* Detect MFA and enabled/disabled MFA\n* Detect Password changes\n* Detect permission changes",
                    "style": "upsell"
                  },
                  "name": "text - 2"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "### [DATC] - Azure AD Workbook (by: Frankie Li)\n\nI design the workbook. Some queries are modified from examples from Microsoft or Microsoft Sentinel Communities. The community, organizations, and business entities can freely use all my works. However, if any MSP wants to use my work for business purposes, please get in touch with frankie@dragonadvancetech.com for permission before deploying it to your client's tenant.\n\n![Image Name](https://www.borza.com/clogo/dragonadvancetech.com.png?width=300&height=125) ",
                    "style": "info"
                  },
                  "name": "text - 0",
                  "styleSettings": {
                    "margin": "opx"
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "About",
              "comparison": "isEqualTo",
              "value": "Show"
            },
            "name": "AboutGroup"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// [DATC] - Explicit MFA Deny\n// Created on: 12-06-2022, 22-07-2022\n// By: Frankie \n// https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SigninLogs/ExplicitMFADeny.yaml\n//\n//|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Need MFA\", errorCode == 50074, \"Not pass MFA\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", errorCode == 50020, \"Tokens Issue\", errorCode == 50089, \"Token Issue\", errorCode == 500121, \"Not pass MFA\", errorCode == 50076, \"Not pass MFA\", errorCode == 50079, \"Need MFA\", errorCode == 50055, \"Invalid password\", errorCode == 50126, \"Invalid password\", errorCode == 50133, \"Invalid password\", errorCode == 50057, \"Disabled account\", \"Failure\");\nlet aadFunc = (tableName: string) {\n    table(tableName)\n    | extend LocationDetails = parse_json(LocationDetails)\n    | extend DeviceDetail = parse_json(DeviceDetail)\n    | where ResultType in (\"0\")\n    | where UserDisplayName != UserPrincipalName and UserPrincipalName != \"sync_abgusdc1adc02_ba1191d550e4@allybridge.onmicrosoft.com\"\n    | where UserPrincipalName in ({Users}) \n    | where Category in ({Category})\n    //| summarize count() by ResultType, ResultDescription, ResourceDisplayName, AccountCustomEntity = UserPrincipalName, IPCustomEntity = IPAddress, URLCustomEntity = ClientAppUsed\n    //| sort by count_ desc \n    | project timestamp = TimeGenerated, Name = UserPrincipalName,  IPAddress, ['Country or region'] = LocationDetails.countryOrRegion, ClientUsed = ClientAppUsed, ResourceDisplayName, ['OS'] = DeviceDetail.operatingSystem\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt",
              "size": 1,
              "title": "Successfully Sign-Ins",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "timestamp",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "16ch"
                    }
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "IPAddress",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "16ch"
                    }
                  },
                  {
                    "columnMatch": "Country or region",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "HK",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "ResultType",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "16ch"
                    }
                  },
                  {
                    "columnMatch": "ResultDescription",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "ClientUsed",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "URLCustomEntity",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "AccountCustomEntity",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "IPCustomEntity",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "16ch"
                    }
                  },
                  {
                    "columnMatch": "Time generated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "User",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "❌ Error Code",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "Sign-in Time",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "App",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Error code",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result signature",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access policies",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Operating system",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Browser",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "State",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "City",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "User principal name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Category",
                    "formatter": 5
                  }
                ],
                "rowLimit": 200
              }
            },
            "customWidth": "50",
            "name": "mfa-success"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AuditLogs\n| where OperationName contains \"strong authentication\" or OperationName contains \"password\" or OperationName contains \"security\"\n| mv-expand targetRes = TargetResources\n| extend targetUser = targetRes.userPrincipalName\n| extend initUser = InitiatedBy.user.userPrincipalName\n| where not(initUser contains \"AllyBridge.onmicrosoft.com\")\n| where targetUser in ({Users}) \n| project TimeGenerated, targetUser, OperationName, Result, SetupBy = initUser, ResultReason",
              "size": 1,
              "title": "Changes in Security Info or MFA Status",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "targetUser",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "OperationName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "Result",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "failure",
                          "representation": "failed",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "SetupBy",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "ResultReason",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "SecInfo or MFA"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// [DATC] - Explicit MFA Deny\n// Created on: 12-06-2022, 22-07-2022\n// By: Frankie \n// https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SigninLogs/ExplicitMFADeny.yaml\n//\n//|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Need MFA\", errorCode == 50074, \"Not pass MFA\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", errorCode == 50020, \"Tokens Issue\", errorCode == 50089, \"Token Issue\", errorCode == 500121, \"Not pass MFA\", errorCode == 50076, \"Not pass MFA\", errorCode == 50079, \"Need MFA\", errorCode == 50055, \"Invalid password\", errorCode == 50126, \"Invalid password\", errorCode == 50133, \"Invalid password\", errorCode == 50057, \"Disabled account\", errorCode == 50173, \"Fresh token needed\", \"Failure\");\nlet aadFunc = (tableName: string) {\n    table(tableName)\n    | extend LocationDetails = parse_json(LocationDetails)\n    | extend DeviceDetail = parse_json(DeviceDetail)\n    | where ResultType in (\"50020\", \"50089\", \"70044\", \"500121\", \"50072\", \"50074\", \"50076\", \"50079\") \n    | where UserDisplayName != UserPrincipalName\n    | where UserPrincipalName in ({Users}) \n    | where Category in ({Category})\n    //| summarize count() by ResultType, ResultDescription, ResourceDisplayName, AccountCustomEntity = UserPrincipalName, IPCustomEntity = IPAddress, URLCustomEntity = ClientAppUsed\n    //| sort by count_ desc \n    | project timestamp = TimeGenerated, Name = UserPrincipalName,  IPAddress, ['Country or region'] = LocationDetails.countryOrRegion, ResultType, ResultDescription, ClientUsed = ClientAppUsed, ResourceDisplayName, ['OS'] = DeviceDetail.operatingSystem\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt",
              "size": 1,
              "title": "MFA not pass, need 2nd factor or failed",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "timestamp",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "16ch"
                    }
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "IPAddress",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "16ch"
                    }
                  },
                  {
                    "columnMatch": "Country or region",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "HK",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "ResultType",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "16ch"
                    }
                  },
                  {
                    "columnMatch": "ResultDescription",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "ClientUsed",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "URLCustomEntity",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "AccountCustomEntity",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "30ch"
                    }
                  },
                  {
                    "columnMatch": "IPCustomEntity",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "16ch"
                    }
                  },
                  {
                    "columnMatch": "Time generated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "User",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "❌ Error Code",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "Sign-in Time",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "App",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Error code",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Result signature",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access policies",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Conditional access status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Operating system",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Browser",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "State",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "City",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "User principal name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Category",
                    "formatter": 5
                  }
                ],
                "rowLimit": 200
              }
            },
            "customWidth": "50",
            "name": "mfa-deny"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Need MFA\", errorCode == 50074, \"Not pass MFA\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", errorCode == 50020, \"Tokens Issue\", errorCode == 50089, \"Token Issue\", errorCode == 500121, \"Not pass MFA\", errorCode == 50076, \"Not pass MFA\", errorCode == 50079, \"Need MFA\", errorCode == 50055, \"Invalid password\", errorCode == 50126, \"Invalid password\", errorCode == 50133, \"Invalid password\", errorCode == 50057, \"Disabled account\", errorCode == 50173, \"Fresh token needed\", \"Failure\");\r\nlet nonInteractive = AADNonInteractiveUserSignInLogs\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Status = parse_json(Status)\r\n| extend DeviceDetail = parse_json(DeviceDetail)\r\n| extend ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies);\r\nlet data=\r\nunion SigninLogs,nonInteractive\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where UserPrincipalName in ({Users}) \r\n| where Category in ({Category}) \r\n| extend ErrorCode = tostring(Status.errorCode) \r\n| extend FailureReason = tostring(Status.failureReason) \r\n| where ErrorCode in (\"500121\", \"50072\", \"50074\", \"50076\", \"50079\", \"50020\") \r\n| project ['Time generated'] = TimeGenerated, Name = UserPrincipalName, IPAddress, ['Region'] = LocationDetails.countryOrRegion, ErrorCode, ResultDescription, ClientUsed = ClientAppUsed, ResourceDisplayName, ['OS'] = DeviceDetail.operatingSystem;\r\ndata\r\n| summarize Count = count() by ErrorCode",
              "size": 1,
              "title": "Login Failed (MFA-related) ",
              "timeContextFromParameter": "TimeRange",
              "exportFieldName": "Status",
              "exportParameterName": "SigninStatus",
              "exportDefaultValue": "*",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "SigninStatus",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 9,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "50076",
                    "label": "Not pass MFA (50076)"
                  },
                  {
                    "seriesName": "50074",
                    "label": "Pending user action (50074)"
                  },
                  {
                    "seriesName": "50089",
                    "label": "Flow token expired (50089)"
                  },
                  {
                    "seriesName": "50072",
                    "label": "Pending user action (50072)"
                  },
                  {
                    "seriesName": "500121",
                    "label": "Failed during MFA (500121)"
                  },
                  {
                    "seriesName": "70044",
                    "label": "Others (Others)"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "failure-mfa-chart"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Need MFA\", errorCode == 50074, \"Not pass MFA\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", errorCode == 50020, \"Tokens Issue\", errorCode == 50089, \"Token Issue\", errorCode == 500121, \"Not pass MFA\", errorCode == 50076, \"Not pass MFA\", errorCode == 50079, \"Need MFA\", errorCode == 50055, \"Invalid password\", errorCode == 50126, \"Invalid password\", errorCode == 50133, \"Invalid password\", errorCode == 50057, \"Disabled account\", errorCode == 50173, \"Fresh token needed\", \"Failure\");\r\nlet nonInteractive = AADNonInteractiveUserSignInLogs\r\n| extend LocationDetails = parse_json(LocationDetails)\r\n| extend Status = parse_json(Status)\r\n| extend DeviceDetail = parse_json(DeviceDetail)\r\n| extend ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies);\r\nlet data=\r\nunion SigninLogs,nonInteractive\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where UserPrincipalName in ({Users}) \r\n| where Category in ({Category}) \r\n| extend ErrorCode = tostring(Status.errorCode) \r\n| extend FailureReason = tostring(Status.failureReason) \r\n| where ErrorCode in (\"50020\", \"50089\", \"50173\")  \r\n| project ['Time generated'] = TimeGenerated, Name = UserPrincipalName, IPAddress, ['Region'] = LocationDetails.countryOrRegion, ErrorCode, ResultDescription, ClientUsed = ClientAppUsed, ResourceDisplayName, ['OS'] = DeviceDetail.operatingSystem;\r\ndata\r\n| summarize Count = count() by ErrorCode",
              "size": 1,
              "title": "Login Failed (Token-related)",
              "exportFieldName": "Status",
              "exportParameterName": "SigninStatus",
              "exportDefaultValue": "*",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "SigninStatus",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 9,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "50076",
                    "label": "Not pass MFA (50076)"
                  },
                  {
                    "seriesName": "50074",
                    "label": "Pending user action (50074)"
                  },
                  {
                    "seriesName": "50089",
                    "label": "Flow token expired (50089)"
                  },
                  {
                    "seriesName": "50072",
                    "label": "Pending user action (50072)"
                  },
                  {
                    "seriesName": "500121",
                    "label": "Failed during MFA (500121)"
                  },
                  {
                    "seriesName": "70044",
                    "label": "Others (Others)"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "failure-token-chart"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Need MFA\", errorCode == 50074, \"Not pass MFA\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", errorCode == 50020, \"Tokens Issue\", errorCode == 50089, \"Token Issue\", errorCode == 500121, \"Not pass MFA\", errorCode == 50076, \"Not pass MFA\", errorCode == 50079, \"Need MFA\", errorCode == 50055, \"Invalid password\", errorCode == 50126, \"Invalid password\", errorCode == 50133, \"Invalid password\", errorCode == 50057, \"Disabled account\", errorCode == 50173, \"Fresh token needed\", \"Failure\");\nlet nonInteractive = AADNonInteractiveUserSignInLogs\n| extend LocationDetails = parse_json(LocationDetails)\n| extend Status = parse_json(Status)\n| extend DeviceDetail = parse_json(DeviceDetail)\n| extend ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies);\nlet data=\nunion SigninLogs,nonInteractive\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\n| where UserPrincipalName in ({Users}) \n| where Category in ({Category})\n| extend ErrorCode = tostring(Status.errorCode) \n| extend FailureReason = tostring(Status.failureReason) \n| where ErrorCode in (\"50020\", \"50089\", \"50173\") \n| project ['Time generated'] = TimeGenerated, Name = UserPrincipalName, IPAddress, ['Region'] = LocationDetails.countryOrRegion, ErrorCode, ResultDescription, ClientUsed = ClientAppUsed, ResourceDisplayName, ['OS'] = DeviceDetail.operatingSystem;\ndata",
              "size": 1,
              "title": "MFA failure: Token expired",
              "timeContext": {
                "durationMs": 604800000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Time generated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "IPAddress",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "Region",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "HK",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "CN",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "8ch"
                    }
                  },
                  {
                    "columnMatch": "ErrorCode",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "User",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "❌ Error Code",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "City",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "Operating system",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "failure-token"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "//|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Need MFA\", errorCode == 50074, \"Not pass MFA\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", errorCode == 50020, \"Tokens Issue\", errorCode == 50089, \"Token Issue\", errorCode == 500121, \"Not pass MFA\", errorCode == 50076, \"Not pass MFA\", errorCode == 50079, \"Need MFA\", errorCode == 50055, \"Invalid password\", errorCode == 50126, \"Invalid password\", errorCode == 50133, \"Invalid password\", errorCode == 50057, \"Disabled account\", errorCode == 50173, \"Fresh token needed\", \"Failure\");\nlet nonInteractive = AADNonInteractiveUserSignInLogs\n| extend LocationDetails = parse_json(LocationDetails)\n| extend Status = parse_json(Status)\n| extend DeviceDetail = parse_json(DeviceDetail)\n| extend ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies);\nlet data=\nunion SigninLogs,nonInteractive\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\n| where UserPrincipalName in ({Users}) \n| where Category in ({Category})\n| extend ErrorCode = tostring(Status.errorCode) \n| extend FailureReason = tostring(Status.failureReason) \n| where ErrorCode in (\"50057\") \n| project ['Time generated'] = TimeGenerated, Name = UserPrincipalName, IPAddress, ['Region'] = LocationDetails.countryOrRegion, ErrorCode, ResultDescription, ClientUsed = ClientAppUsed, ResourceDisplayName, ['OS'] = DeviceDetail.operatingSystem;\ndata",
              "size": 1,
              "title": "Sign-In failure: Disabled Account",
              "timeContext": {
                "durationMs": 604800000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Time generated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "IPAddress",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "Region",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "HK",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "US",
                          "representation": "magenta",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "CN",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "8ch"
                    }
                  },
                  {
                    "columnMatch": "ErrorCode",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "User",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "❌ Error Code",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "City",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "Operating system",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  }
                ]
              }
            },
            "customWidth": "30",
            "name": "failure-disabled"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs\n| where not(UserPrincipalName contains \"onmicrosoft.com\")\n// ----- DeviceDetail is dictionary ----- \n//| where AuthenticationProcessingDetails contains \"OAuth\"\n| mv-expand  AuthProcDetails = todynamic(AuthenticationProcessingDetails)\n// ----- AuthenticationDetails is array ----- \n| mv-expand AuthDetails = todynamic(AuthenticationDetails)\n| extend AuthMethod = tostring(todynamic(AuthDetails)['authenticationMethod'])\n| extend AuthStep = tostring(todynamic(AuthDetails)['authenticationStepResultDetail'])\n| extend AuthSucceed = tostring(todynamic(AuthDetails)['succeeded'])\n| extend AuthRequirement = tostring(todynamic(AuthDetails)['authenticationStepRequirement'])\n//| where AuthenticationRequirement == \"singleFactorAuthentication\"\n//| where AuthSucceed == \"true\" or AuthSucceed == \"false\"\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\n| where UserPrincipalName in ({Users})\n| where AuthenticationRequirement in ({AuthProc})\n| project TimeGenerated, UserPrincipalName, AuthMethod, AuthStep, AuthSucceed, AuthenticationRequirement, ResultDescription, IPAddress, ['Region'] = LocationDetails.countryOrRegion, ['OS'] = DeviceDetail.operatingSystem,['Browser'] = DeviceDetail.browser, AuthProcDetails.key",
              "size": 0,
              "title": "User Authentication Process and Results",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "UserPrincipalName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "AuthMethod",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "AuthStep",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "AuthSucceed",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "false",
                          "representation": "failed",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "12ch"
                    }
                  },
                  {
                    "columnMatch": "AuthenticationRequirement",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "ResultDescription",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "IPAddress",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "18ch"
                    }
                  },
                  {
                    "columnMatch": "Region",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "OS",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "10ch"
                    }
                  },
                  {
                    "columnMatch": "Browser",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  }
                ]
              }
            },
            "customWidth": "70",
            "name": "AuthProc"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tab",
        "comparison": "isEqualTo",
        "value": "mfa"
      },
      "name": "mfa"
    }
  ],
  "fallbackResourceIds": [
    ""
  ],
  "fromTemplateId": "sentinel-UserWorkbook",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}