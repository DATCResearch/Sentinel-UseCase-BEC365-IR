{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "",
        "description":  "",
        "prerequisites":  "",
        "postDeployment":  [
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  ""
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "Defender_Check-HaveIBeenPwned",
            "type":  "string"
        },
        "Api Key":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Api Key"
            }
        },
        "Azure Log Analytics Log Name":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Azure Log Analytics Log Name"
            }
        },
        "Email List":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Email List"
            }
        },
        "Frequency":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Frequency"
            }
        },
        "Interval":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Interval"
            }
        },
        "includeUnverified":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for includeUnverified"
            }
        }
    },
    "variables":  {
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "TeamsConnectionName":  "[concat('Teams-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Disabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        },
                        "Api Key":  {
                            "defaultValue":  "[parameters('Api Key')]",
                            "type":  "string"
                        },
                        "Azure Log Analytics Log Name":  {
                            "defaultValue":  "[parameters('Azure Log Analytics Log Name')]",
                            "type":  "string"
                        },
                        "Email List":  {
                            "defaultValue":  "[parameters('Email List')]",
                            "type":  "string"
                        },
                        "Frequency":  {
                            "defaultValue":  "[parameters('Frequency')]",
                            "type":  "string"
                        },
                        "Interval":  {
                            "defaultValue":  "[parameters('Interval')]",
                            "type":  "string"
                        },
                        "includeUnverified":  {
                            "defaultValue":  "[parameters('includeUnverified')]",
                            "type":  "string"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "API_Variable":  {
                            "runAfter":  {
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "hibp-api-key",
                                        "type":  "string",
                                        "value":  "50ee12ada51a4a6fb926df48bab259dd"
                                    }
                                ]
                            }
                        },
                        "Entities_-_Get_Accounts":  {
                            "runAfter":  {
                                "API_Variable":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/entities/account"
                            }
                        },
                        "For_each":  {
                            "foreach":  "@body('Parse_JSON')",
                            "actions":  {
                                "Condition":  {
                                    "actions":  {
                                        "Pwned":  {
                                            "runAfter":  {
                                            },
                                            "type":  "ApiConnection",
                                            "inputs":  {
                                                "body":  {
                                                    "messageBody":  "\u003cp\u003eDear Support:\u003cbr\u003e\n\u003cbr\u003e\n\u003cbr\u003e\nTitle: \u0026nbsp;\u0026nbsp;@{triggerBody()?['object']?['properties']?['title']}\u003cbr\u003e\n------------------------------------------------------------------------------\u003cbr\u003e\n\u003cbr\u003e\n@{variables('FullEmailAddress')} was pwned\u003cbr\u003e\n\u003cbr\u003e\n@{body('HTTP')}\u003cbr\u003e\n\u003cbr\u003e\n------------------------------------------------------------------------------\u003cbr\u003e\nURL: \u0026nbsp;\u0026nbsp;\u0026nbsp;@{triggerBody()?['object']?['properties']?['incidentUrl']}\u003c/p\u003e",
                                                    "recipient":  {
                                                        "channelId":  "19:1ef5212407c445f593b37d048c5f2ee5@thread.tacv2",
                                                        "groupId":  "8a7963a1-6180-420a-9250-f02053ee0a6c"
                                                    }
                                                },
                                                "host":  {
                                                    "connection":  {
                                                        "name":  "@parameters('$connections')['teams']['connectionId']"
                                                    }
                                                },
                                                "method":  "post",
                                                "path":  "/beta/teams/conversation/message/poster/Flow bot/location/@{encodeURIComponent('Channel')}"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Set_Query_Return":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "else":  {
                                        "actions":  {
                                            "Not_Pwned":  {
                                                "runAfter":  {
                                                },
                                                "type":  "ApiConnection",
                                                "inputs":  {
                                                    "body":  {
                                                        "messageBody":  "\u003cp\u003e@{variables('FullEmailAddress')} is not pwned\u003cbr\u003e\n\u003cbr\u003e\n\u003c/p\u003e",
                                                        "recipient":  {
                                                            "channelId":  "19:1ef5212407c445f593b37d048c5f2ee5@thread.tacv2",
                                                            "groupId":  "8a7963a1-6180-420a-9250-f02053ee0a6c"
                                                        }
                                                    },
                                                    "host":  {
                                                        "connection":  {
                                                            "name":  "@parameters('$connections')['teams']['connectionId']"
                                                        }
                                                    },
                                                    "method":  "post",
                                                    "path":  "/beta/teams/conversation/message/poster/Flow bot/location/@{encodeURIComponent('Channel')}"
                                                }
                                            }
                                        }
                                    },
                                    "expression":  {
                                        "or":  [
                                            {
                                                "equals":  [
                                                    "@outputs('HTTP')['statusCode']",
                                                    200
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                },
                                "Create_HTML_table":  {
                                    "runAfter":  {
                                    },
                                    "type":  "Table",
                                    "inputs":  {
                                        "format":  "HTML",
                                        "from":  "@body('Entities_-_Get_Accounts')?['Accounts']"
                                    }
                                },
                                "For_each_2":  {
                                    "foreach":  "@body('Entities_-_Get_Accounts')?['Accounts']",
                                    "actions":  {
                                        "Set_FullEmailAddress":  {
                                            "runAfter":  {
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "FullEmailAddress",
                                                "value":  "@{items('For_each')['accountName']}@{variables('Asterisk')}@{items('For_each_2')?['UPNSuffix']}"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Create_HTML_table":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "HTTP":  {
                                    "runAfter":  {
                                        "For_each_2":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "limit":  {
                                        "timeout":  "PT1M"
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "headers":  {
                                            "hibp-api-key":  "@parameters('Api Key')"
                                        },
                                        "method":  "GET",
                                        "retryPolicy":  {
                                            "type":  "none"
                                        },
                                        "uri":  "https://haveibeenpwned.com/api/v3/breachedaccount/@{variables('FullEmailAddress')}"
                                    }
                                },
                                "Set_Query_Return":  {
                                    "runAfter":  {
                                        "HTTP":  [
                                            "Succeeded",
                                            "Failed"
                                        ]
                                    },
                                    "type":  "SetVariable",
                                    "inputs":  {
                                        "name":  "Query Return",
                                        "value":  "@{outputs('HTTP')['statusCode']}"
                                    }
                                }
                            },
                            "runAfter":  {
                                "Parse_JSON":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "Initialize_Asterisk":  {
                            "runAfter":  {
                                "Entities_-_Get_Accounts":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Asterisk",
                                        "type":  "string",
                                        "value":  "@"
                                    }
                                ]
                            }
                        },
                        "Initialize_FullEmailAddress":  {
                            "runAfter":  {
                                "Initialize_Query_Return":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "FullEmailAddress",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Query_Return":  {
                            "runAfter":  {
                                "Initialize_Asterisk":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Query Return",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON":  {
                            "runAfter":  {
                                "Initialize_FullEmailAddress":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@body('Entities_-_Get_Accounts')?['Accounts']",
                                "schema":  {
                                    "items":  {
                                        "properties":  {
                                            "Name":  {
                                                "type":  "string"
                                            },
                                            "Type":  {
                                                "type":  "string"
                                            },
                                            "accountName":  {
                                                "type":  "string"
                                            },
                                            "friendlyName":  {
                                                "type":  "string"
                                            }
                                        },
                                        "required":  [
                                            "accountName",
                                            "friendlyName",
                                            "Type",
                                            "Name"
                                        ],
                                        "type":  "object"
                                    },
                                    "type":  "array"
                                }
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "teams":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                                "connectionName":  "[variables('TeamsConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "hidden-SentinelTemplateName":  "Defender_Check-HaveIBeenPwned",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('TeamsConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('TeamsConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                }
            }
        }
    ]
}
